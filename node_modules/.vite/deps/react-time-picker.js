import {
  clsx_m_exports,
  init_clsx_m
} from "./chunk-HORPD52W.js";
import {
  require_react_dom
} from "./chunk-E2VUF65O.js";
import {
  require_prop_types
} from "./chunk-544JXPZK.js";
import {
  require_react
} from "./chunk-N4J7XAQA.js";
import {
  __commonJS,
  __esm,
  __export,
  __reExport,
  __toCommonJS,
  __toESM
} from "./chunk-FJLWZCXQ.js";

// vite:dep-pre-bundle:external-conversion:E:/herd-sites/scat/node_modules/react-clock/dist/Clock.css
var Clock_exports = {};
__export(Clock_exports, {
  default: () => default2
});
import { default as default2 } from "E:/herd-sites/scat/node_modules/react-clock/dist/Clock.css";
import * as Clock_star from "E:/herd-sites/scat/node_modules/react-clock/dist/Clock.css";
var init_Clock = __esm({
  "vite:dep-pre-bundle:external-conversion:E:/herd-sites/scat/node_modules/react-clock/dist/Clock.css"() {
    __reExport(Clock_exports, Clock_star);
  }
});

// node_modules/make-event-props/dist/cjs/index.js
var require_cjs = __commonJS({
  "node_modules/make-event-props/dist/cjs/index.js"(exports) {
    "use strict";
    var __spreadArray = exports && exports.__spreadArray || function(to, from, pack) {
      if (pack || arguments.length === 2)
        for (var i = 0, l = from.length, ar; i < l; i++) {
          if (ar || !(i in from)) {
            if (!ar)
              ar = Array.prototype.slice.call(from, 0, i);
            ar[i] = from[i];
          }
        }
      return to.concat(ar || Array.prototype.slice.call(from));
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.allEvents = exports.changeEvents = exports.otherEvents = exports.transitionEvents = exports.animationEvents = exports.wheelEvents = exports.uiEvents = exports.pointerEvents = exports.touchEvents = exports.selectionEvents = exports.dragEvents = exports.mouseEvents = exports.mediaEvents = exports.keyboardEvents = exports.imageEvents = exports.formEvents = exports.focusEvents = exports.compositionEvents = exports.clipboardEvents = void 0;
    exports.clipboardEvents = ["onCopy", "onCut", "onPaste"];
    exports.compositionEvents = [
      "onCompositionEnd",
      "onCompositionStart",
      "onCompositionUpdate"
    ];
    exports.focusEvents = ["onFocus", "onBlur"];
    exports.formEvents = ["onInput", "onInvalid", "onReset", "onSubmit"];
    exports.imageEvents = ["onLoad", "onError"];
    exports.keyboardEvents = ["onKeyDown", "onKeyPress", "onKeyUp"];
    exports.mediaEvents = [
      "onAbort",
      "onCanPlay",
      "onCanPlayThrough",
      "onDurationChange",
      "onEmptied",
      "onEncrypted",
      "onEnded",
      "onError",
      "onLoadedData",
      "onLoadedMetadata",
      "onLoadStart",
      "onPause",
      "onPlay",
      "onPlaying",
      "onProgress",
      "onRateChange",
      "onSeeked",
      "onSeeking",
      "onStalled",
      "onSuspend",
      "onTimeUpdate",
      "onVolumeChange",
      "onWaiting"
    ];
    exports.mouseEvents = [
      "onClick",
      "onContextMenu",
      "onDoubleClick",
      "onMouseDown",
      "onMouseEnter",
      "onMouseLeave",
      "onMouseMove",
      "onMouseOut",
      "onMouseOver",
      "onMouseUp"
    ];
    exports.dragEvents = [
      "onDrag",
      "onDragEnd",
      "onDragEnter",
      "onDragExit",
      "onDragLeave",
      "onDragOver",
      "onDragStart",
      "onDrop"
    ];
    exports.selectionEvents = ["onSelect"];
    exports.touchEvents = ["onTouchCancel", "onTouchEnd", "onTouchMove", "onTouchStart"];
    exports.pointerEvents = [
      "onPointerDown",
      "onPointerMove",
      "onPointerUp",
      "onPointerCancel",
      "onGotPointerCapture",
      "onLostPointerCapture",
      "onPointerEnter",
      "onPointerLeave",
      "onPointerOver",
      "onPointerOut"
    ];
    exports.uiEvents = ["onScroll"];
    exports.wheelEvents = ["onWheel"];
    exports.animationEvents = [
      "onAnimationStart",
      "onAnimationEnd",
      "onAnimationIteration"
    ];
    exports.transitionEvents = ["onTransitionEnd"];
    exports.otherEvents = ["onToggle"];
    exports.changeEvents = ["onChange"];
    exports.allEvents = __spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], exports.clipboardEvents, true), exports.compositionEvents, true), exports.focusEvents, true), exports.formEvents, true), exports.imageEvents, true), exports.keyboardEvents, true), exports.mediaEvents, true), exports.mouseEvents, true), exports.dragEvents, true), exports.selectionEvents, true), exports.touchEvents, true), exports.pointerEvents, true), exports.uiEvents, true), exports.wheelEvents, true), exports.animationEvents, true), exports.transitionEvents, true), exports.changeEvents, true), exports.otherEvents, true);
    function makeEventProps(props, getArgs) {
      var eventProps = {};
      exports.allEvents.forEach(function(eventName) {
        var eventHandler = props[eventName];
        if (!eventHandler) {
          return;
        }
        if (getArgs) {
          eventProps[eventName] = function(event) {
            return eventHandler(event, getArgs(eventName));
          };
        } else {
          eventProps[eventName] = eventHandler;
        }
      });
      return eventProps;
    }
    exports.default = makeEventProps;
  }
});

// node_modules/detect-element-overflow/dist/cjs/index.js
var require_cjs2 = __commonJS({
  "node_modules/detect-element-overflow/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function getRect(element) {
      return element.getBoundingClientRect();
    }
    function detectElementOverflow(element, container) {
      return {
        get collidedTop() {
          return getRect(element).top < getRect(container).top;
        },
        get collidedBottom() {
          return getRect(element).bottom > getRect(container).bottom;
        },
        get collidedLeft() {
          return getRect(element).left < getRect(container).left;
        },
        get collidedRight() {
          return getRect(element).right > getRect(container).right;
        },
        get overflowTop() {
          return getRect(container).top - getRect(element).top;
        },
        get overflowBottom() {
          return getRect(element).bottom - getRect(container).bottom;
        },
        get overflowLeft() {
          return getRect(container).left - getRect(element).left;
        },
        get overflowRight() {
          return getRect(element).right - getRect(container).right;
        }
      };
    }
    exports.default = detectElementOverflow;
  }
});

// node_modules/tiny-warning/dist/tiny-warning.esm.js
var tiny_warning_esm_exports = {};
__export(tiny_warning_esm_exports, {
  default: () => tiny_warning_esm_default
});
function warning(condition, message) {
  if (!isProduction) {
    if (condition) {
      return;
    }
    var text = "Warning: " + message;
    if (typeof console !== "undefined") {
      console.warn(text);
    }
    try {
      throw Error(text);
    } catch (x) {
    }
  }
}
var isProduction, tiny_warning_esm_default;
var init_tiny_warning_esm = __esm({
  "node_modules/tiny-warning/dist/tiny-warning.esm.js"() {
    isProduction = false;
    tiny_warning_esm_default = warning;
  }
});

// node_modules/react-fit/dist/cjs/Fit.js
var require_Fit = __commonJS({
  "node_modules/react-fit/dist/cjs/Fit.js"(exports) {
    "use strict";
    "use client";
    var __extends = exports && exports.__extends || function() {
      var extendStatics = function(d, b) {
        extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d2, b2) {
          d2.__proto__ = b2;
        } || function(d2, b2) {
          for (var p in b2)
            if (Object.prototype.hasOwnProperty.call(b2, p))
              d2[p] = b2[p];
        };
        return extendStatics(d, b);
      };
      return function(d, b) {
        if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() {
          this.constructor = d;
        }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
    }();
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __rest = exports && exports.__rest || function(s, e) {
      var t = {};
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
          t[p] = s[p];
      if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
            t[p[i]] = s[p[i]];
        }
      return t;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var react_1 = __importStar(require_react());
    var react_dom_1 = require_react_dom();
    var prop_types_1 = __importDefault(require_prop_types());
    var detect_element_overflow_1 = __importDefault(require_cjs2());
    var tiny_warning_1 = __importDefault((init_tiny_warning_esm(), __toCommonJS(tiny_warning_esm_exports)));
    var isBrowser = typeof document !== "undefined";
    var isDisplayContentsSupported = isBrowser && "CSS" in window && "supports" in window.CSS && CSS.supports("display", "contents");
    var isMutationObserverSupported = isBrowser && "MutationObserver" in window;
    function capitalize(string) {
      return string.charAt(0).toUpperCase() + string.slice(1);
    }
    function findScrollContainer(element) {
      var parent = element.parentElement;
      while (parent) {
        var overflow = window.getComputedStyle(parent).overflow;
        if (overflow.split(" ").every(function(o) {
          return o === "auto" || o === "scroll";
        })) {
          return parent;
        }
        parent = parent.parentElement;
      }
      return document.documentElement;
    }
    function alignAxis(_a) {
      var axis = _a.axis, container = _a.container, element = _a.element, invertAxis = _a.invertAxis, scrollContainer = _a.scrollContainer, secondary = _a.secondary, spacing = _a.spacing;
      var style = window.getComputedStyle(element);
      var parent = container.parentElement;
      if (!parent) {
        return;
      }
      var scrollContainerCollisions = (0, detect_element_overflow_1.default)(parent, scrollContainer);
      var documentCollisions = (0, detect_element_overflow_1.default)(parent, document.documentElement);
      var isX = axis === "x";
      var startProperty = isX ? "left" : "top";
      var endProperty = isX ? "right" : "bottom";
      var sizeProperty = isX ? "width" : "height";
      var overflowStartProperty = "overflow".concat(capitalize(startProperty));
      var overflowEndProperty = "overflow".concat(capitalize(endProperty));
      var scrollProperty = "scroll".concat(capitalize(startProperty));
      var uppercasedSizeProperty = capitalize(sizeProperty);
      var offsetSizeProperty = "offset".concat(uppercasedSizeProperty);
      var clientSizeProperty = "client".concat(uppercasedSizeProperty);
      var minSizeProperty = "min-".concat(sizeProperty);
      var scrollbarWidth = scrollContainer[offsetSizeProperty] - scrollContainer[clientSizeProperty];
      var startSpacing = typeof spacing === "object" ? spacing[startProperty] : spacing;
      var availableStartSpace = -Math.max(scrollContainerCollisions[overflowStartProperty], documentCollisions[overflowStartProperty] + document.documentElement[scrollProperty]) - startSpacing;
      var endSpacing = typeof spacing === "object" ? spacing[endProperty] : spacing;
      var availableEndSpace = -Math.max(scrollContainerCollisions[overflowEndProperty], documentCollisions[overflowEndProperty] - document.documentElement[scrollProperty]) - endSpacing - scrollbarWidth;
      if (secondary) {
        availableStartSpace += parent[clientSizeProperty];
        availableEndSpace += parent[clientSizeProperty];
      }
      var offsetSize = element[offsetSizeProperty];
      function displayStart() {
        element.style[startProperty] = "auto";
        element.style[endProperty] = secondary ? "0" : "100%";
      }
      function displayEnd() {
        element.style[startProperty] = secondary ? "0" : "100%";
        element.style[endProperty] = "auto";
      }
      function displayIfFits(availableSpace, display) {
        var fits2 = offsetSize <= availableSpace;
        if (fits2) {
          display();
        }
        return fits2;
      }
      function displayStartIfFits() {
        return displayIfFits(availableStartSpace, displayStart);
      }
      function displayEndIfFits() {
        return displayIfFits(availableEndSpace, displayEnd);
      }
      function displayWhereverShrinkedFits() {
        var moreSpaceStart = availableStartSpace > availableEndSpace;
        var rawMinSize = style.getPropertyValue(minSizeProperty);
        var minSize = rawMinSize ? parseInt(rawMinSize, 10) : null;
        function shrinkToSize(size) {
          (0, tiny_warning_1.default)(!minSize || size >= minSize, "<Fit />'s child will not fit anywhere with its current ".concat(minSizeProperty, " of ").concat(minSize, "px."));
          var newSize = Math.max(size, minSize || 0);
          (0, tiny_warning_1.default)(false, "<Fit />'s child needed to have its ".concat(sizeProperty, " decreased to ").concat(newSize, "px."));
          element.style[sizeProperty] = "".concat(newSize, "px");
        }
        if (moreSpaceStart) {
          shrinkToSize(availableStartSpace);
          displayStart();
        } else {
          shrinkToSize(availableEndSpace);
          displayEnd();
        }
      }
      var fits;
      if (invertAxis) {
        fits = displayStartIfFits() || displayEndIfFits();
      } else {
        fits = displayEndIfFits() || displayStartIfFits();
      }
      if (!fits) {
        displayWhereverShrinkedFits();
      }
    }
    function alignMainAxis(args) {
      alignAxis(args);
    }
    function alignSecondaryAxis(args) {
      alignAxis(__assign(__assign({}, args), { axis: args.axis === "x" ? "y" : "x", secondary: true }));
    }
    function alignBothAxis(args) {
      var invertAxis = args.invertAxis, invertSecondaryAxis = args.invertSecondaryAxis, commonArgs = __rest(args, ["invertAxis", "invertSecondaryAxis"]);
      alignMainAxis(__assign(__assign({}, commonArgs), { invertAxis }));
      alignSecondaryAxis(__assign(__assign({}, commonArgs), { invertAxis: invertSecondaryAxis }));
    }
    var Fit = function(_super) {
      __extends(Fit2, _super);
      function Fit2() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.fit = function() {
          var _a = _this, scrollContainer = _a.scrollContainer, container = _a.container, element = _a.element;
          if (!scrollContainer || !container || !element) {
            return;
          }
          var elementWidth = element.clientWidth;
          var elementHeight = element.clientHeight;
          if (_this.elementWidth === elementWidth && _this.elementHeight === elementHeight) {
            return;
          }
          _this.elementWidth = elementWidth;
          _this.elementHeight = elementHeight;
          var parent = container.parentElement;
          if (!parent) {
            return;
          }
          var style = window.getComputedStyle(element);
          var position = style.position;
          if (position !== "absolute") {
            element.style.position = "absolute";
          }
          var parentStyle = window.getComputedStyle(parent);
          var parentPosition = parentStyle.position;
          if (parentPosition !== "relative" && parentPosition !== "absolute") {
            parent.style.position = "relative";
          }
          var _b = _this.props, invertAxis = _b.invertAxis, invertSecondaryAxis = _b.invertSecondaryAxis, _c = _b.mainAxis, mainAxis = _c === void 0 ? "y" : _c, _d = _b.spacing, spacing = _d === void 0 ? 8 : _d;
          alignBothAxis({
            axis: mainAxis,
            container,
            element,
            invertAxis,
            invertSecondaryAxis,
            scrollContainer,
            spacing
          });
        };
        return _this;
      }
      Fit2.prototype.componentDidMount = function() {
        var _this = this;
        if (!isDisplayContentsSupported) {
          var element = (0, react_dom_1.findDOMNode)(this);
          if (!element || !(element instanceof HTMLElement)) {
            return;
          }
          this.container = element;
          this.element = element;
          this.scrollContainer = findScrollContainer(element);
        }
        this.fit();
        var onMutation = function() {
          _this.fit();
        };
        if (isMutationObserverSupported && this.element) {
          var mutationObserver = new MutationObserver(onMutation);
          mutationObserver.observe(this.element, {
            attributes: true,
            attributeFilter: ["class", "style"]
          });
        }
      };
      Fit2.prototype.render = function() {
        var _this = this;
        var children = this.props.children;
        var child = react_1.default.Children.only(children);
        if (isDisplayContentsSupported) {
          return react_1.default.createElement("span", { ref: function(container) {
            _this.container = container;
            var element = container && container.firstElementChild;
            if (!element || !(element instanceof HTMLElement)) {
              return;
            }
            _this.element = element;
            _this.scrollContainer = findScrollContainer(element);
          }, style: { display: "contents" } }, child);
        }
        return child;
      };
      Fit2.propTypes = {
        children: prop_types_1.default.node.isRequired,
        invertAxis: prop_types_1.default.bool,
        invertSecondaryAxis: prop_types_1.default.bool,
        mainAxis: prop_types_1.default.oneOf(["x", "y"]),
        spacing: prop_types_1.default.oneOfType([
          prop_types_1.default.number,
          prop_types_1.default.shape({
            bottom: prop_types_1.default.number.isRequired,
            left: prop_types_1.default.number.isRequired,
            right: prop_types_1.default.number.isRequired,
            top: prop_types_1.default.number.isRequired
          })
        ])
      };
      return Fit2;
    }(react_1.Component);
    exports.default = Fit;
  }
});

// node_modules/react-fit/dist/cjs/index.js
var require_cjs3 = __commonJS({
  "node_modules/react-fit/dist/cjs/index.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Fit = void 0;
    var Fit_js_1 = __importDefault(require_Fit());
    exports.Fit = Fit_js_1.default;
    exports.default = Fit_js_1.default;
  }
});

// node_modules/react-clock/node_modules/clsx/dist/clsx.js
var require_clsx = __commonJS({
  "node_modules/react-clock/node_modules/clsx/dist/clsx.js"(exports, module) {
    function r(e2) {
      var o, t, f = "";
      if ("string" == typeof e2 || "number" == typeof e2)
        f += e2;
      else if ("object" == typeof e2)
        if (Array.isArray(e2)) {
          var n = e2.length;
          for (o = 0; o < n; o++)
            e2[o] && (t = r(e2[o])) && (f && (f += " "), f += t);
        } else
          for (t in e2)
            e2[t] && (f && (f += " "), f += t);
      return f;
    }
    function e() {
      for (var e2, o, t = 0, f = "", n = arguments.length; t < n; t++)
        (e2 = arguments[t]) && (o = r(e2)) && (f && (f += " "), f += o);
      return f;
    }
    module.exports = e, module.exports.clsx = e;
  }
});

// node_modules/@wojtekmaj/date-utils/dist/cjs/index.js
var require_cjs4 = __commonJS({
  "node_modules/@wojtekmaj/date-utils/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getISOLocalDateTime = exports.getISOLocalDate = exports.getISOLocalMonth = exports.getHoursMinutesSeconds = exports.getHoursMinutes = exports.getDaysInMonth = exports.getDayRange = exports.getNextDayEnd = exports.getPreviousDayEnd = exports.getDayEnd = exports.getNextDayStart = exports.getPreviousDayStart = exports.getDayStart = exports.getMonthRange = exports.getNextMonthEnd = exports.getPreviousMonthEnd = exports.getMonthEnd = exports.getNextMonthStart = exports.getPreviousMonthStart = exports.getMonthStart = exports.getYearRange = exports.getNextYearEnd = exports.getPreviousYearEnd = exports.getYearEnd = exports.getNextYearStart = exports.getPreviousYearStart = exports.getYearStart = exports.getDecadeRange = exports.getNextDecadeEnd = exports.getPreviousDecadeEnd = exports.getDecadeEnd = exports.getNextDecadeStart = exports.getPreviousDecadeStart = exports.getDecadeStart = exports.getCenturyRange = exports.getNextCenturyEnd = exports.getPreviousCenturyEnd = exports.getCenturyEnd = exports.getNextCenturyStart = exports.getPreviousCenturyStart = exports.getCenturyStart = exports.getMilliseconds = exports.getSeconds = exports.getMinutes = exports.getHours = exports.getDate = exports.getMonthHuman = exports.getMonth = exports.getYear = void 0;
    function makeGetEdgeOfNeighbor(getPeriod, getEdgeOfPeriod, defaultOffset) {
      return function makeGetEdgeOfNeighborInternal(date, offset) {
        if (offset === void 0) {
          offset = defaultOffset;
        }
        var previousPeriod = getPeriod(date) + offset;
        return getEdgeOfPeriod(previousPeriod);
      };
    }
    function makeGetEnd(getBeginOfNextPeriod) {
      return function makeGetEndInternal(date) {
        return new Date(getBeginOfNextPeriod(date).getTime() - 1);
      };
    }
    function makeGetRange(getStart, getEnd) {
      return function makeGetRangeInternal(date) {
        return [getStart(date), getEnd(date)];
      };
    }
    function getYear(date) {
      if (date instanceof Date) {
        return date.getFullYear();
      }
      if (typeof date === "number") {
        return date;
      }
      var year = parseInt(date, 10);
      if (typeof date === "string" && !isNaN(year)) {
        return year;
      }
      throw new Error("Failed to get year from date: ".concat(date, "."));
    }
    exports.getYear = getYear;
    function getMonth(date) {
      if (date instanceof Date) {
        return date.getMonth();
      }
      throw new Error("Failed to get month from date: ".concat(date, "."));
    }
    exports.getMonth = getMonth;
    function getMonthHuman(date) {
      if (date instanceof Date) {
        return date.getMonth() + 1;
      }
      throw new Error("Failed to get human-readable month from date: ".concat(date, "."));
    }
    exports.getMonthHuman = getMonthHuman;
    function getDate(date) {
      if (date instanceof Date) {
        return date.getDate();
      }
      throw new Error("Failed to get year from date: ".concat(date, "."));
    }
    exports.getDate = getDate;
    function getHours(date) {
      if (date instanceof Date) {
        return date.getHours();
      }
      if (typeof date === "string") {
        var datePieces = date.split(":");
        if (datePieces.length >= 2) {
          var hoursString = datePieces[0];
          if (hoursString) {
            var hours = parseInt(hoursString, 10);
            if (!isNaN(hours)) {
              return hours;
            }
          }
        }
      }
      throw new Error("Failed to get hours from date: ".concat(date, "."));
    }
    exports.getHours = getHours;
    function getMinutes(date) {
      if (date instanceof Date) {
        return date.getMinutes();
      }
      if (typeof date === "string") {
        var datePieces = date.split(":");
        if (datePieces.length >= 2) {
          var minutesString = datePieces[1] || "0";
          var minutes = parseInt(minutesString, 10);
          if (!isNaN(minutes)) {
            return minutes;
          }
        }
      }
      throw new Error("Failed to get minutes from date: ".concat(date, "."));
    }
    exports.getMinutes = getMinutes;
    function getSeconds(date) {
      if (date instanceof Date) {
        return date.getSeconds();
      }
      if (typeof date === "string") {
        var datePieces = date.split(":");
        if (datePieces.length >= 2) {
          var secondsWithMillisecondsString = datePieces[2] || "0";
          var seconds = parseInt(secondsWithMillisecondsString, 10);
          if (!isNaN(seconds)) {
            return seconds;
          }
        }
      }
      throw new Error("Failed to get seconds from date: ".concat(date, "."));
    }
    exports.getSeconds = getSeconds;
    function getMilliseconds(date) {
      if (date instanceof Date) {
        return date.getMilliseconds();
      }
      if (typeof date === "string") {
        var datePieces = date.split(":");
        if (datePieces.length >= 2) {
          var secondsWithMillisecondsString = datePieces[2] || "0";
          var millisecondsString = secondsWithMillisecondsString.split(".")[1] || "0";
          var milliseconds = parseInt(millisecondsString, 10);
          if (!isNaN(milliseconds)) {
            return milliseconds;
          }
        }
      }
      throw new Error("Failed to get seconds from date: ".concat(date, "."));
    }
    exports.getMilliseconds = getMilliseconds;
    function getCenturyStart(date) {
      var year = getYear(date);
      var centuryStartYear = year + (-year + 1) % 100;
      var centuryStartDate = new Date();
      centuryStartDate.setFullYear(centuryStartYear, 0, 1);
      centuryStartDate.setHours(0, 0, 0, 0);
      return centuryStartDate;
    }
    exports.getCenturyStart = getCenturyStart;
    exports.getPreviousCenturyStart = makeGetEdgeOfNeighbor(getYear, getCenturyStart, -100);
    exports.getNextCenturyStart = makeGetEdgeOfNeighbor(getYear, getCenturyStart, 100);
    exports.getCenturyEnd = makeGetEnd(exports.getNextCenturyStart);
    exports.getPreviousCenturyEnd = makeGetEdgeOfNeighbor(getYear, exports.getCenturyEnd, -100);
    exports.getNextCenturyEnd = makeGetEdgeOfNeighbor(getYear, exports.getCenturyEnd, 100);
    exports.getCenturyRange = makeGetRange(getCenturyStart, exports.getCenturyEnd);
    function getDecadeStart(date) {
      var year = getYear(date);
      var decadeStartYear = year + (-year + 1) % 10;
      var decadeStartDate = new Date();
      decadeStartDate.setFullYear(decadeStartYear, 0, 1);
      decadeStartDate.setHours(0, 0, 0, 0);
      return decadeStartDate;
    }
    exports.getDecadeStart = getDecadeStart;
    exports.getPreviousDecadeStart = makeGetEdgeOfNeighbor(getYear, getDecadeStart, -10);
    exports.getNextDecadeStart = makeGetEdgeOfNeighbor(getYear, getDecadeStart, 10);
    exports.getDecadeEnd = makeGetEnd(exports.getNextDecadeStart);
    exports.getPreviousDecadeEnd = makeGetEdgeOfNeighbor(getYear, exports.getDecadeEnd, -10);
    exports.getNextDecadeEnd = makeGetEdgeOfNeighbor(getYear, exports.getDecadeEnd, 10);
    exports.getDecadeRange = makeGetRange(getDecadeStart, exports.getDecadeEnd);
    function getYearStart(date) {
      var year = getYear(date);
      var yearStartDate = new Date();
      yearStartDate.setFullYear(year, 0, 1);
      yearStartDate.setHours(0, 0, 0, 0);
      return yearStartDate;
    }
    exports.getYearStart = getYearStart;
    exports.getPreviousYearStart = makeGetEdgeOfNeighbor(getYear, getYearStart, -1);
    exports.getNextYearStart = makeGetEdgeOfNeighbor(getYear, getYearStart, 1);
    exports.getYearEnd = makeGetEnd(exports.getNextYearStart);
    exports.getPreviousYearEnd = makeGetEdgeOfNeighbor(getYear, exports.getYearEnd, -1);
    exports.getNextYearEnd = makeGetEdgeOfNeighbor(getYear, exports.getYearEnd, 1);
    exports.getYearRange = makeGetRange(getYearStart, exports.getYearEnd);
    function makeGetEdgeOfNeighborMonth(getEdgeOfPeriod, defaultOffset) {
      return function makeGetEdgeOfNeighborMonthInternal(date, offset) {
        if (offset === void 0) {
          offset = defaultOffset;
        }
        var year = getYear(date);
        var month = getMonth(date) + offset;
        var previousPeriod = new Date();
        previousPeriod.setFullYear(year, month, 1);
        previousPeriod.setHours(0, 0, 0, 0);
        return getEdgeOfPeriod(previousPeriod);
      };
    }
    function getMonthStart(date) {
      var year = getYear(date);
      var month = getMonth(date);
      var monthStartDate = new Date();
      monthStartDate.setFullYear(year, month, 1);
      monthStartDate.setHours(0, 0, 0, 0);
      return monthStartDate;
    }
    exports.getMonthStart = getMonthStart;
    exports.getPreviousMonthStart = makeGetEdgeOfNeighborMonth(getMonthStart, -1);
    exports.getNextMonthStart = makeGetEdgeOfNeighborMonth(getMonthStart, 1);
    exports.getMonthEnd = makeGetEnd(exports.getNextMonthStart);
    exports.getPreviousMonthEnd = makeGetEdgeOfNeighborMonth(exports.getMonthEnd, -1);
    exports.getNextMonthEnd = makeGetEdgeOfNeighborMonth(exports.getMonthEnd, 1);
    exports.getMonthRange = makeGetRange(getMonthStart, exports.getMonthEnd);
    function makeGetEdgeOfNeighborDay(getEdgeOfPeriod, defaultOffset) {
      return function makeGetEdgeOfNeighborDayInternal(date, offset) {
        if (offset === void 0) {
          offset = defaultOffset;
        }
        var year = getYear(date);
        var month = getMonth(date);
        var day = getDate(date) + offset;
        var previousPeriod = new Date();
        previousPeriod.setFullYear(year, month, day);
        previousPeriod.setHours(0, 0, 0, 0);
        return getEdgeOfPeriod(previousPeriod);
      };
    }
    function getDayStart(date) {
      var year = getYear(date);
      var month = getMonth(date);
      var day = getDate(date);
      var dayStartDate = new Date();
      dayStartDate.setFullYear(year, month, day);
      dayStartDate.setHours(0, 0, 0, 0);
      return dayStartDate;
    }
    exports.getDayStart = getDayStart;
    exports.getPreviousDayStart = makeGetEdgeOfNeighborDay(getDayStart, -1);
    exports.getNextDayStart = makeGetEdgeOfNeighborDay(getDayStart, 1);
    exports.getDayEnd = makeGetEnd(exports.getNextDayStart);
    exports.getPreviousDayEnd = makeGetEdgeOfNeighborDay(exports.getDayEnd, -1);
    exports.getNextDayEnd = makeGetEdgeOfNeighborDay(exports.getDayEnd, 1);
    exports.getDayRange = makeGetRange(getDayStart, exports.getDayEnd);
    function getDaysInMonth(date) {
      return getDate((0, exports.getMonthEnd)(date));
    }
    exports.getDaysInMonth = getDaysInMonth;
    function padStart(num, val) {
      if (val === void 0) {
        val = 2;
      }
      var numStr = "".concat(num);
      if (numStr.length >= val) {
        return num;
      }
      return "0000".concat(numStr).slice(-val);
    }
    function getHoursMinutes(date) {
      var hours = padStart(getHours(date));
      var minutes = padStart(getMinutes(date));
      return "".concat(hours, ":").concat(minutes);
    }
    exports.getHoursMinutes = getHoursMinutes;
    function getHoursMinutesSeconds(date) {
      var hours = padStart(getHours(date));
      var minutes = padStart(getMinutes(date));
      var seconds = padStart(getSeconds(date));
      return "".concat(hours, ":").concat(minutes, ":").concat(seconds);
    }
    exports.getHoursMinutesSeconds = getHoursMinutesSeconds;
    function getISOLocalMonth(date) {
      var year = padStart(getYear(date), 4);
      var month = padStart(getMonthHuman(date));
      return "".concat(year, "-").concat(month);
    }
    exports.getISOLocalMonth = getISOLocalMonth;
    function getISOLocalDate(date) {
      var year = padStart(getYear(date), 4);
      var month = padStart(getMonthHuman(date));
      var day = padStart(getDate(date));
      return "".concat(year, "-").concat(month, "-").concat(day);
    }
    exports.getISOLocalDate = getISOLocalDate;
    function getISOLocalDateTime(date) {
      return "".concat(getISOLocalDate(date), "T").concat(getHoursMinutesSeconds(date));
    }
    exports.getISOLocalDateTime = getISOLocalDateTime;
  }
});

// node_modules/react-clock/dist/cjs/Hand.js
var require_Hand = __commonJS({
  "node_modules/react-clock/dist/cjs/Hand.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var react_1 = __importDefault(require_react());
    function Hand(_a) {
      var _b = _a.angle, angle = _b === void 0 ? 0 : _b, name = _a.name, _c = _a.length, length = _c === void 0 ? 100 : _c, _d = _a.oppositeLength, oppositeLength = _d === void 0 ? 10 : _d, _e = _a.width, width = _e === void 0 ? 1 : _e;
      return react_1.default.createElement(
        "div",
        { className: "react-clock__hand react-clock__".concat(name, "-hand"), style: {
          transform: "rotate(".concat(angle, "deg)")
        } },
        react_1.default.createElement("div", { className: "react-clock__hand__body react-clock__".concat(name, "-hand__body"), style: {
          width: "".concat(width, "px"),
          top: "".concat(50 - length / 2, "%"),
          bottom: "".concat(50 - oppositeLength / 2, "%")
        } })
      );
    }
    exports.default = Hand;
  }
});

// node_modules/react-clock/dist/cjs/Mark.js
var require_Mark = __commonJS({
  "node_modules/react-clock/dist/cjs/Mark.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var react_1 = __importDefault(require_react());
    function Mark(_a) {
      var _b = _a.angle, angle = _b === void 0 ? 0 : _b, _c = _a.length, length = _c === void 0 ? 10 : _c, name = _a.name, _d = _a.width, width = _d === void 0 ? 1 : _d, number = _a.number;
      return react_1.default.createElement(
        "div",
        { className: "react-clock__mark react-clock__".concat(name, "-mark"), style: {
          transform: "rotate(".concat(angle, "deg)")
        } },
        react_1.default.createElement("div", { className: "react-clock__mark__body react-clock__".concat(name, "-mark__body"), style: {
          width: "".concat(width, "px"),
          top: 0,
          bottom: "".concat(100 - length / 2, "%")
        } }),
        number ? react_1.default.createElement("div", { className: "react-clock__mark__number", style: {
          transform: "rotate(-".concat(angle, "deg)"),
          top: "".concat(length / 2, "%")
        } }, number) : null
      );
    }
    exports.default = Mark;
  }
});

// node_modules/react-clock/dist/cjs/MinuteMark.js
var require_MinuteMark = __commonJS({
  "node_modules/react-clock/dist/cjs/MinuteMark.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var react_1 = __importStar(require_react());
    var Mark_js_1 = __importDefault(require_Mark());
    var MinuteMark = (0, react_1.memo)(function MinuteMark2(props) {
      return react_1.default.createElement(Mark_js_1.default, __assign({}, props));
    });
    exports.default = MinuteMark;
  }
});

// node_modules/mimic-fn/index.js
var require_mimic_fn = __commonJS({
  "node_modules/mimic-fn/index.js"(exports, module) {
    "use strict";
    var copyProperty = (to, from, property, ignoreNonConfigurable) => {
      if (property === "length" || property === "prototype") {
        return;
      }
      if (property === "arguments" || property === "caller") {
        return;
      }
      const toDescriptor = Object.getOwnPropertyDescriptor(to, property);
      const fromDescriptor = Object.getOwnPropertyDescriptor(from, property);
      if (!canCopyProperty(toDescriptor, fromDescriptor) && ignoreNonConfigurable) {
        return;
      }
      Object.defineProperty(to, property, fromDescriptor);
    };
    var canCopyProperty = function(toDescriptor, fromDescriptor) {
      return toDescriptor === void 0 || toDescriptor.configurable || toDescriptor.writable === fromDescriptor.writable && toDescriptor.enumerable === fromDescriptor.enumerable && toDescriptor.configurable === fromDescriptor.configurable && (toDescriptor.writable || toDescriptor.value === fromDescriptor.value);
    };
    var changePrototype = (to, from) => {
      const fromPrototype = Object.getPrototypeOf(from);
      if (fromPrototype === Object.getPrototypeOf(to)) {
        return;
      }
      Object.setPrototypeOf(to, fromPrototype);
    };
    var wrappedToString = (withName, fromBody) => `/* Wrapped ${withName}*/
${fromBody}`;
    var toStringDescriptor = Object.getOwnPropertyDescriptor(Function.prototype, "toString");
    var toStringName = Object.getOwnPropertyDescriptor(Function.prototype.toString, "name");
    var changeToString = (to, from, name) => {
      const withName = name === "" ? "" : `with ${name.trim()}() `;
      const newToString = wrappedToString.bind(null, withName, from.toString());
      Object.defineProperty(newToString, "name", toStringName);
      Object.defineProperty(to, "toString", { ...toStringDescriptor, value: newToString });
    };
    var mimicFn = (to, from, { ignoreNonConfigurable = false } = {}) => {
      const { name } = to;
      for (const property of Reflect.ownKeys(from)) {
        copyProperty(to, from, property, ignoreNonConfigurable);
      }
      changePrototype(to, from);
      changeToString(to, from, name);
      return to;
    };
    module.exports = mimicFn;
  }
});

// node_modules/p-defer/index.js
var require_p_defer = __commonJS({
  "node_modules/p-defer/index.js"(exports, module) {
    "use strict";
    module.exports = () => {
      const ret = {};
      ret.promise = new Promise((resolve, reject) => {
        ret.resolve = resolve;
        ret.reject = reject;
      });
      return ret;
    };
  }
});

// node_modules/map-age-cleaner/dist/index.js
var require_dist = __commonJS({
  "node_modules/map-age-cleaner/dist/index.js"(exports, module) {
    "use strict";
    var __awaiter = exports && exports.__awaiter || function(thisArg, _arguments, P, generator) {
      return new (P || (P = Promise))(function(resolve, reject) {
        function fulfilled(value) {
          try {
            step(generator.next(value));
          } catch (e) {
            reject(e);
          }
        }
        function rejected(value) {
          try {
            step(generator["throw"](value));
          } catch (e) {
            reject(e);
          }
        }
        function step(result) {
          result.done ? resolve(result.value) : new P(function(resolve2) {
            resolve2(result.value);
          }).then(fulfilled, rejected);
        }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
      });
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var p_defer_1 = __importDefault(require_p_defer());
    function mapAgeCleaner(map, property = "maxAge") {
      let processingKey;
      let processingTimer;
      let processingDeferred;
      const cleanup = () => __awaiter(this, void 0, void 0, function* () {
        if (processingKey !== void 0) {
          return;
        }
        const setupTimer = (item) => __awaiter(this, void 0, void 0, function* () {
          processingDeferred = p_defer_1.default();
          const delay = item[1][property] - Date.now();
          if (delay <= 0) {
            map.delete(item[0]);
            processingDeferred.resolve();
            return;
          }
          processingKey = item[0];
          processingTimer = setTimeout(() => {
            map.delete(item[0]);
            if (processingDeferred) {
              processingDeferred.resolve();
            }
          }, delay);
          if (typeof processingTimer.unref === "function") {
            processingTimer.unref();
          }
          return processingDeferred.promise;
        });
        try {
          for (const entry of map) {
            yield setupTimer(entry);
          }
        } catch (_a) {
        }
        processingKey = void 0;
      });
      const reset = () => {
        processingKey = void 0;
        if (processingTimer !== void 0) {
          clearTimeout(processingTimer);
          processingTimer = void 0;
        }
        if (processingDeferred !== void 0) {
          processingDeferred.reject(void 0);
          processingDeferred = void 0;
        }
      };
      const originalSet = map.set.bind(map);
      map.set = (key, value) => {
        if (map.has(key)) {
          map.delete(key);
        }
        const result = originalSet(key, value);
        if (processingKey && processingKey === key) {
          reset();
        }
        cleanup();
        return result;
      };
      cleanup();
      return map;
    }
    exports.default = mapAgeCleaner;
    module.exports = mapAgeCleaner;
    module.exports.default = mapAgeCleaner;
  }
});

// node_modules/mem/dist/index.js
var require_dist2 = __commonJS({
  "node_modules/mem/dist/index.js"(exports, module) {
    "use strict";
    var mimicFn = require_mimic_fn();
    var mapAgeCleaner = require_dist();
    var decoratorInstanceMap = /* @__PURE__ */ new WeakMap();
    var cacheStore = /* @__PURE__ */ new WeakMap();
    var mem = (fn, { cacheKey, cache = /* @__PURE__ */ new Map(), maxAge } = {}) => {
      if (typeof maxAge === "number") {
        mapAgeCleaner(cache);
      }
      const memoized = function(...arguments_) {
        const key = cacheKey ? cacheKey(arguments_) : arguments_[0];
        const cacheItem = cache.get(key);
        if (cacheItem) {
          return cacheItem.data;
        }
        const result = fn.apply(this, arguments_);
        cache.set(key, {
          data: result,
          maxAge: maxAge ? Date.now() + maxAge : Number.POSITIVE_INFINITY
        });
        return result;
      };
      mimicFn(memoized, fn, {
        ignoreNonConfigurable: true
      });
      cacheStore.set(memoized, cache);
      return memoized;
    };
    mem.decorator = (options = {}) => (target, propertyKey, descriptor) => {
      const input = target[propertyKey];
      if (typeof input !== "function") {
        throw new TypeError("The decorated value must be a function");
      }
      delete descriptor.value;
      delete descriptor.writable;
      descriptor.get = function() {
        if (!decoratorInstanceMap.has(this)) {
          const value = mem(input, options);
          decoratorInstanceMap.set(this, value);
          return value;
        }
        return decoratorInstanceMap.get(this);
      };
    };
    mem.clear = (fn) => {
      const cache = cacheStore.get(fn);
      if (!cache) {
        throw new TypeError("Can't clear a function that was not memoized!");
      }
      if (typeof cache.clear !== "function") {
        throw new TypeError("The cache Map can't be cleared!");
      }
      cache.clear();
    };
    module.exports = mem;
  }
});

// node_modules/get-user-locale/dist/cjs/index.js
var require_cjs5 = __commonJS({
  "node_modules/get-user-locale/dist/cjs/index.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getUserLocale = exports.getUserLocales = void 0;
    var mem_1 = __importDefault(require_dist2());
    function isString(el) {
      return typeof el === "string";
    }
    function isUnique(el, index, arr) {
      return arr.indexOf(el) === index;
    }
    function isAllLowerCase(el) {
      return el.toLowerCase() === el;
    }
    function fixCommas(el) {
      return el.indexOf(",") === -1 ? el : el.split(",");
    }
    function normalizeLocale(locale) {
      if (!locale) {
        return locale;
      }
      if (locale === "C" || locale === "posix" || locale === "POSIX") {
        return "en-US";
      }
      if (locale.indexOf(".") !== -1) {
        var _a = locale.split(".")[0], actualLocale = _a === void 0 ? "" : _a;
        return normalizeLocale(actualLocale);
      }
      if (locale.indexOf("@") !== -1) {
        var _b = locale.split("@")[0], actualLocale = _b === void 0 ? "" : _b;
        return normalizeLocale(actualLocale);
      }
      if (locale.indexOf("-") === -1 || !isAllLowerCase(locale)) {
        return locale;
      }
      var _c = locale.split("-"), splitEl1 = _c[0], _d = _c[1], splitEl2 = _d === void 0 ? "" : _d;
      return "".concat(splitEl1, "-").concat(splitEl2.toUpperCase());
    }
    function getUserLocalesInternal2(_a) {
      var _b = _a === void 0 ? {} : _a, _c = _b.useFallbackLocale, useFallbackLocale = _c === void 0 ? true : _c, _d = _b.fallbackLocale, fallbackLocale = _d === void 0 ? "en-US" : _d;
      var languageList = [];
      if (typeof navigator !== "undefined") {
        var rawLanguages = navigator.languages || [];
        var languages = [];
        for (var _i = 0, rawLanguages_1 = rawLanguages; _i < rawLanguages_1.length; _i++) {
          var rawLanguagesItem = rawLanguages_1[_i];
          languages = languages.concat(fixCommas(rawLanguagesItem));
        }
        var rawLanguage = navigator.language;
        var language = rawLanguage ? fixCommas(rawLanguage) : rawLanguage;
        languageList = languageList.concat(languages, language);
      }
      if (useFallbackLocale) {
        languageList.push(fallbackLocale);
      }
      return languageList.filter(isString).map(normalizeLocale).filter(isUnique);
    }
    exports.getUserLocales = (0, mem_1.default)(getUserLocalesInternal2, { cacheKey: JSON.stringify });
    function getUserLocaleInternal2(options) {
      return (0, exports.getUserLocales)(options)[0] || null;
    }
    exports.getUserLocale = (0, mem_1.default)(getUserLocaleInternal2, { cacheKey: JSON.stringify });
    exports.default = exports.getUserLocale;
  }
});

// node_modules/react-clock/dist/cjs/shared/hourFormatter.js
var require_hourFormatter = __commonJS({
  "node_modules/react-clock/dist/cjs/shared/hourFormatter.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.formatHour = void 0;
    var get_user_locale_1 = __importDefault(require_cjs5());
    function formatHour(locale, hour) {
      return hour.toLocaleString(locale || (0, get_user_locale_1.default)() || void 0);
    }
    exports.formatHour = formatHour;
  }
});

// node_modules/react-clock/dist/cjs/HourMark.js
var require_HourMark = __commonJS({
  "node_modules/react-clock/dist/cjs/HourMark.js"(exports) {
    "use strict";
    var __assign = exports && exports.__assign || function() {
      __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
          s = arguments[i];
          for (var p in s)
            if (Object.prototype.hasOwnProperty.call(s, p))
              t[p] = s[p];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0)
        k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule)
        return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod)
          if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k))
            __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __rest = exports && exports.__rest || function(s, e) {
      var t = {};
      for (var p in s)
        if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
          t[p] = s[p];
      if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
            t[p[i]] = s[p[i]];
        }
      return t;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var react_1 = __importStar(require_react());
    var Mark_js_1 = __importDefault(require_Mark());
    var hourFormatter_js_1 = require_hourFormatter();
    var HourMark = (0, react_1.memo)(function HourMark2(_a) {
      var _b = _a.formatHour, formatHour = _b === void 0 ? hourFormatter_js_1.formatHour : _b, locale = _a.locale, number = _a.number, otherProps = __rest(_a, ["formatHour", "locale", "number"]);
      return react_1.default.createElement(Mark_js_1.default, __assign({ number: number ? formatHour(locale, number) : null }, otherProps));
    });
    exports.default = HourMark;
  }
});

// node_modules/react-clock/dist/cjs/shared/propTypes.js
var require_propTypes = __commonJS({
  "node_modules/react-clock/dist/cjs/shared/propTypes.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isMarkWidth = exports.isMarkLength = exports.isHandWidth = exports.isOppositeHandLength = exports.isHandLength = void 0;
    function isNumberBetween(min, max) {
      return function(props, propName, componentName) {
        var _a = props, _b = propName, value = _a[_b];
        if (typeof value !== "undefined") {
          if (typeof value !== "number") {
            return new Error("Invalid prop `".concat(propName, "` of type `").concat(typeof value, "` supplied to `").concat(componentName, "`, expected `number`."));
          }
          if (value < min || value > max) {
            return new Error("Invalid prop `".concat(propName, "` of type `").concat(typeof value, "` supplied to `").concat(componentName, "`, length must be between ").concat(min, " and ").concat(max, "."));
          }
        }
        return null;
      };
    }
    exports.isHandLength = isNumberBetween(0, 100);
    exports.isOppositeHandLength = isNumberBetween(-100, 100);
    var isHandWidth = function isHandWidth2(props, propName, componentName) {
      var _a = props, _b = propName, width = _a[_b];
      if (typeof width !== "undefined") {
        if (typeof width !== "number") {
          return new Error("Invalid prop `".concat(propName, "` of type `").concat(typeof width, "` supplied to `").concat(componentName, "`, expected `number`."));
        }
        if (width < 0) {
          return new Error("Invalid prop `".concat(propName, "` of type `").concat(typeof width, "` supplied to `").concat(componentName, "`, width must be greater or equal to 0."));
        }
      }
      return null;
    };
    exports.isHandWidth = isHandWidth;
    exports.isMarkLength = exports.isHandLength;
    exports.isMarkWidth = exports.isHandWidth;
  }
});

// node_modules/react-clock/dist/cjs/Clock.js
var require_Clock = __commonJS({
  "node_modules/react-clock/dist/cjs/Clock.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    var react_1 = __importDefault(require_react());
    var prop_types_1 = __importDefault(require_prop_types());
    var clsx_1 = __importDefault(require_clsx());
    var date_utils_1 = require_cjs4();
    var Hand_js_1 = __importDefault(require_Hand());
    var MinuteMark_js_1 = __importDefault(require_MinuteMark());
    var HourMark_js_1 = __importDefault(require_HourMark());
    var propTypes_js_1 = require_propTypes();
    var Clock = function Clock2(_a) {
      var className = _a.className, formatHour = _a.formatHour, _b = _a.hourHandLength, hourHandLength = _b === void 0 ? 50 : _b, hourHandOppositeLength = _a.hourHandOppositeLength, _c = _a.hourHandWidth, hourHandWidth = _c === void 0 ? 4 : _c, _d = _a.hourMarksLength, hourMarksLength = _d === void 0 ? 10 : _d, _e = _a.hourMarksWidth, hourMarksWidth = _e === void 0 ? 3 : _e, locale = _a.locale, _f = _a.minuteHandLength, minuteHandLength = _f === void 0 ? 70 : _f, minuteHandOppositeLength = _a.minuteHandOppositeLength, _g = _a.minuteHandWidth, minuteHandWidth = _g === void 0 ? 2 : _g, _h = _a.minuteMarksLength, minuteMarksLength = _h === void 0 ? 6 : _h, _j = _a.minuteMarksWidth, minuteMarksWidth = _j === void 0 ? 1 : _j, _k = _a.renderHourMarks, renderHourMarks = _k === void 0 ? true : _k, _l = _a.renderMinuteHand, renderMinuteHand = _l === void 0 ? true : _l, _m = _a.renderMinuteMarks, renderMinuteMarks = _m === void 0 ? true : _m, renderNumbers = _a.renderNumbers, _o = _a.renderSecondHand, renderSecondHand = _o === void 0 ? true : _o, _p = _a.secondHandLength, secondHandLength = _p === void 0 ? 90 : _p, secondHandOppositeLength = _a.secondHandOppositeLength, _q = _a.secondHandWidth, secondHandWidth = _q === void 0 ? 1 : _q, _r = _a.size, size = _r === void 0 ? 150 : _r, useMillisecondPrecision = _a.useMillisecondPrecision, value = _a.value;
      function renderMinuteMarksFn() {
        if (!renderMinuteMarks) {
          return null;
        }
        var minuteMarks = [];
        for (var i = 1; i <= 60; i += 1) {
          var isHourMark = renderHourMarks && !(i % 5);
          if (!isHourMark) {
            minuteMarks.push(react_1.default.createElement(MinuteMark_js_1.default, { key: "minute_".concat(i), angle: i * 6, length: minuteMarksLength, name: "minute", width: minuteMarksWidth }));
          }
        }
        return minuteMarks;
      }
      function renderHourMarksFn() {
        if (!renderHourMarks) {
          return null;
        }
        var hourMarks = [];
        for (var i = 1; i <= 12; i += 1) {
          hourMarks.push(react_1.default.createElement(HourMark_js_1.default, { key: "hour_".concat(i), angle: i * 30, formatHour, length: hourMarksLength, locale, name: "hour", number: renderNumbers ? i : void 0, width: hourMarksWidth }));
        }
        return hourMarks;
      }
      function renderFace() {
        return react_1.default.createElement(
          "div",
          { className: "react-clock__face" },
          renderMinuteMarksFn(),
          renderHourMarksFn()
        );
      }
      function renderHourHandFn() {
        var angle = value ? (0, date_utils_1.getHours)(value) * 30 + (0, date_utils_1.getMinutes)(value) / 2 + (0, date_utils_1.getSeconds)(value) / 120 + (useMillisecondPrecision ? (0, date_utils_1.getMilliseconds)(value) / 12e4 : 0) : 0;
        return react_1.default.createElement(Hand_js_1.default, { angle, length: hourHandLength, name: "hour", oppositeLength: hourHandOppositeLength, width: hourHandWidth });
      }
      function renderMinuteHandFn() {
        if (!renderMinuteHand) {
          return null;
        }
        var angle = value ? (0, date_utils_1.getHours)(value) * 360 + (0, date_utils_1.getMinutes)(value) * 6 + (0, date_utils_1.getSeconds)(value) / 10 + (useMillisecondPrecision ? (0, date_utils_1.getMilliseconds)(value) / 1e4 : 0) : 0;
        return react_1.default.createElement(Hand_js_1.default, { angle, length: minuteHandLength, name: "minute", oppositeLength: minuteHandOppositeLength, width: minuteHandWidth });
      }
      function renderSecondHandFn() {
        if (!renderSecondHand) {
          return null;
        }
        var angle = value ? (0, date_utils_1.getMinutes)(value) * 360 + (0, date_utils_1.getSeconds)(value) * 6 + (useMillisecondPrecision ? (0, date_utils_1.getMilliseconds)(value) * 6e-3 : 0) : 0;
        return react_1.default.createElement(Hand_js_1.default, { angle, length: secondHandLength, name: "second", oppositeLength: secondHandOppositeLength, width: secondHandWidth });
      }
      return react_1.default.createElement(
        "time",
        { className: (0, clsx_1.default)("react-clock", className), dateTime: value instanceof Date ? value.toISOString() : value || void 0, style: {
          width: size,
          height: size
        } },
        renderFace(),
        renderHourHandFn(),
        renderMinuteHandFn(),
        renderSecondHandFn()
      );
    };
    Clock.propTypes = {
      className: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.arrayOf(prop_types_1.default.string)]),
      formatHour: prop_types_1.default.func,
      hourHandLength: propTypes_js_1.isHandLength,
      hourHandOppositeLength: propTypes_js_1.isOppositeHandLength,
      hourHandWidth: propTypes_js_1.isHandWidth,
      hourMarksLength: propTypes_js_1.isMarkLength,
      hourMarksWidth: propTypes_js_1.isMarkWidth,
      locale: prop_types_1.default.string,
      minuteHandLength: propTypes_js_1.isHandLength,
      minuteHandOppositeLength: propTypes_js_1.isOppositeHandLength,
      minuteHandWidth: propTypes_js_1.isHandWidth,
      minuteMarksLength: propTypes_js_1.isMarkLength,
      minuteMarksWidth: propTypes_js_1.isMarkWidth,
      renderHourMarks: prop_types_1.default.bool,
      renderMinuteHand: prop_types_1.default.bool,
      renderMinuteMarks: prop_types_1.default.bool,
      renderNumbers: prop_types_1.default.bool,
      renderSecondHand: prop_types_1.default.bool,
      secondHandLength: propTypes_js_1.isHandLength,
      secondHandOppositeLength: propTypes_js_1.isOppositeHandLength,
      secondHandWidth: propTypes_js_1.isHandWidth,
      size: prop_types_1.default.oneOfType([prop_types_1.default.number, prop_types_1.default.string]),
      value: prop_types_1.default.oneOfType([prop_types_1.default.string, prop_types_1.default.instanceOf(Date)])
    };
    exports.default = Clock;
  }
});

// node_modules/react-clock/dist/cjs/index.js
var require_cjs6 = __commonJS({
  "node_modules/react-clock/dist/cjs/index.js"(exports) {
    "use strict";
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Clock = void 0;
    var Clock_js_1 = __importDefault(require_Clock());
    exports.Clock = Clock_js_1.default;
    exports.default = Clock_js_1.default;
  }
});

// node_modules/react-time-picker/dist/Divider.js
var require_Divider = __commonJS({
  "node_modules/react-time-picker/dist/Divider.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = Divider;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function Divider(_ref) {
      var children = _ref.children;
      return _react["default"].createElement("span", {
        className: "react-time-picker__inputGroup__divider"
      }, children);
    }
    Divider.propTypes = {
      children: _propTypes["default"].node
    };
  }
});

// node_modules/update-input-width/dist/cjs/index.js
var require_cjs7 = __commonJS({
  "node_modules/update-input-width/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.updateInputWidth = exports.measureText = exports.getFontShorthand = void 0;
    var allowedVariants = ["normal", "small-caps"];
    function getFontShorthand(element) {
      if (!element) {
        return "";
      }
      var style = window.getComputedStyle(element);
      if (style.font) {
        return style.font;
      }
      var isFontDefined = style.fontFamily !== "";
      if (!isFontDefined) {
        return "";
      }
      var fontVariant = allowedVariants.includes(style.fontVariant) ? style.fontVariant : "normal";
      return "".concat(style.fontStyle, " ").concat(fontVariant, " ").concat(style.fontWeight, " ").concat(style.fontSize, " / ").concat(style.lineHeight, " ").concat(style.fontFamily);
    }
    exports.getFontShorthand = getFontShorthand;
    var cachedCanvas;
    function measureText(text, font) {
      var canvas = cachedCanvas || (cachedCanvas = document.createElement("canvas"));
      var context = canvas.getContext("2d");
      if (!context) {
        return null;
      }
      context.font = font;
      var width = context.measureText(text).width;
      return Math.ceil(width);
    }
    exports.measureText = measureText;
    function updateInputWidth(element) {
      if (typeof document === "undefined" || !element) {
        return null;
      }
      var font = getFontShorthand(element);
      var text = element.value || element.placeholder;
      var width = measureText(text, font);
      if (width === null) {
        return null;
      }
      element.style.width = "".concat(width, "px");
      return width;
    }
    exports.updateInputWidth = updateInputWidth;
    exports.default = updateInputWidth;
  }
});

// node_modules/react-time-picker/dist/shared/propTypes.js
var require_propTypes2 = __commonJS({
  "node_modules/react-time-picker/dist/shared/propTypes.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.isValueType = exports.isTime = exports.isRef = void 0;
    var _propTypes = _interopRequireDefault(require_prop_types());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _typeof(obj) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
        return typeof obj2;
      } : function(obj2) {
        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    var allViews = ["hour", "minute", "second"];
    var allValueTypes = [].concat(allViews);
    var hourOptionalSecondsRegExp = /^(([0-1])?[0-9]|2[0-3]):[0-5][0-9](:([0-5][0-9]))?$/;
    var isTime = function isTime2(props, propName, componentName) {
      var time = props[propName];
      if (time) {
        if (!hourOptionalSecondsRegExp.test(time)) {
          return new Error("Invalid prop `".concat(propName, "` of type `").concat(typeof minDate === "undefined" ? "undefined" : _typeof(minDate), "` supplied to `").concat(componentName, "`, expected time in HH:mm(:ss) format."));
        }
      }
      return null;
    };
    exports.isTime = isTime;
    var isValueType = _propTypes["default"].oneOf(allValueTypes);
    exports.isValueType = isValueType;
    var isRef = _propTypes["default"].oneOfType([_propTypes["default"].func, _propTypes["default"].shape({
      current: _propTypes["default"].any
    })]);
    exports.isRef = isRef;
  }
});

// node_modules/react-time-picker/dist/TimeInput/Input.js
var require_Input = __commonJS({
  "node_modules/react-time-picker/dist/TimeInput/Input.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
        return typeof obj2;
      } : function(obj2) {
        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = Input;
    var _react = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _clsx = _interopRequireDefault((init_clsx_m(), __toCommonJS(clsx_m_exports)));
    var _updateInputWidth = _interopRequireWildcard(require_cjs7());
    var _propTypes2 = require_propTypes2();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    var isBrowser = typeof document !== "undefined";
    var useIsomorphicLayoutEffect = isBrowser ? _react.useLayoutEffect : _react.useEffect;
    var isIEOrEdgeLegacy = isBrowser && /(MSIE|Trident\/|Edge\/)/.test(navigator.userAgent);
    var isFirefox = isBrowser && /Firefox/.test(navigator.userAgent);
    function onFocus(event) {
      var target = event.target;
      if (isIEOrEdgeLegacy) {
        requestAnimationFrame(function() {
          return target.select();
        });
      } else {
        target.select();
      }
    }
    function updateInputWidthOnLoad(element) {
      if (document.readyState === "complete") {
        return;
      }
      function onLoad() {
        (0, _updateInputWidth["default"])(element);
      }
      window.addEventListener("load", onLoad);
    }
    function updateInputWidthOnFontLoad(element) {
      if (!document.fonts) {
        return;
      }
      var font = (0, _updateInputWidth.getFontShorthand)(element);
      if (!font) {
        return;
      }
      var isFontLoaded = document.fonts.check(font);
      if (isFontLoaded) {
        return;
      }
      function onLoadingDone() {
        (0, _updateInputWidth["default"])(element);
      }
      document.fonts.addEventListener("loadingdone", onLoadingDone);
    }
    function getSelectionString(input) {
      if (input && "selectionStart" in input && input.selectionStart !== null) {
        return input.value.slice(input.selectionStart, input.selectionEnd);
      }
      if ("getSelection" in window) {
        return window.getSelection().toString();
      }
      return null;
    }
    function makeOnKeyPress(maxLength) {
      return function onKeyPress(event) {
        if (isFirefox) {
          return;
        }
        var key = event.key, input = event.target;
        var value = input.value;
        var isNumberKey = key.length === 1 && /\d/.test(key);
        var selection = getSelectionString(input);
        if (!isNumberKey || !(selection || value.length < maxLength)) {
          event.preventDefault();
        }
      };
    }
    function Input(_ref) {
      var ariaLabel = _ref.ariaLabel, autoFocus = _ref.autoFocus, className = _ref.className, disabled = _ref.disabled, inputRef = _ref.inputRef, max = _ref.max, min = _ref.min, name = _ref.name, nameForClass = _ref.nameForClass, onChange = _ref.onChange, onKeyDown = _ref.onKeyDown, _onKeyUp = _ref.onKeyUp, _ref$placeholder = _ref.placeholder, placeholder = _ref$placeholder === void 0 ? "--" : _ref$placeholder, required = _ref.required, showLeadingZeros = _ref.showLeadingZeros, step = _ref.step, value = _ref.value;
      useIsomorphicLayoutEffect(function() {
        if (!inputRef || !inputRef.current) {
          return;
        }
        (0, _updateInputWidth["default"])(inputRef.current);
        updateInputWidthOnLoad(inputRef.current);
        updateInputWidthOnFontLoad(inputRef.current);
      }, [inputRef, value]);
      var hasLeadingZero = showLeadingZeros && value && value < 10 && (value === "0" || !value.toString().startsWith("0"));
      var maxLength = max ? max.toString().length : null;
      return [hasLeadingZero && _react["default"].createElement("span", {
        key: "leadingZero",
        className: "".concat(className, "__leadingZero")
      }, "0"), _react["default"].createElement("input", {
        key: "input",
        "aria-label": ariaLabel,
        autoComplete: "off",
        autoFocus,
        className: (0, _clsx["default"])("".concat(className, "__input"), "".concat(className, "__").concat(nameForClass || name), hasLeadingZero && "".concat(className, "__input--hasLeadingZero")),
        "data-input": "true",
        disabled,
        inputMode: "numeric",
        max,
        min,
        name,
        onChange,
        onFocus,
        onKeyDown,
        onKeyPress: makeOnKeyPress(maxLength),
        onKeyUp: function onKeyUp(event) {
          (0, _updateInputWidth["default"])(event.target);
          if (_onKeyUp) {
            _onKeyUp(event);
          }
        },
        placeholder,
        ref: inputRef,
        required,
        step,
        type: "number",
        value: value !== null ? value : ""
      })];
    }
    Input.propTypes = {
      ariaLabel: _propTypes["default"].string,
      autoFocus: _propTypes["default"].bool,
      className: _propTypes["default"].string.isRequired,
      disabled: _propTypes["default"].bool,
      inputRef: _propTypes2.isRef,
      max: _propTypes["default"].number,
      min: _propTypes["default"].number,
      name: _propTypes["default"].string,
      nameForClass: _propTypes["default"].string,
      onChange: _propTypes["default"].func,
      onKeyDown: _propTypes["default"].func,
      onKeyUp: _propTypes["default"].func,
      placeholder: _propTypes["default"].string,
      required: _propTypes["default"].bool,
      showLeadingZeros: _propTypes["default"].bool,
      step: _propTypes["default"].number,
      value: _propTypes["default"].string
    };
  }
});

// node_modules/react-time-picker/dist/shared/dates.js
var require_dates = __commonJS({
  "node_modules/react-time-picker/dist/shared/dates.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.convert12to24 = convert12to24;
    exports.convert24to12 = convert24to12;
    function convert12to24(hour12, amPm) {
      var hour24 = parseInt(hour12, 10);
      if (amPm === "am" && hour24 === 12) {
        hour24 = 0;
      } else if (amPm === "pm" && hour24 < 12) {
        hour24 += 12;
      }
      return hour24;
    }
    function convert24to12(hour24) {
      var hour12 = hour24 % 12 || 12;
      return [hour12, hour24 < 12 ? "am" : "pm"];
    }
  }
});

// node_modules/lodash.memoize/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.memoize/index.js"(exports, module) {
    var FUNC_ERROR_TEXT = "Expected a function";
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    function isHostObject(value) {
      var result = false;
      if (value != null && typeof value.toString != "function") {
        try {
          result = !!(value + "");
        } catch (e) {
        }
      }
      return result;
    }
    var arrayProto = Array.prototype;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var coreJsData = root["__core-js_shared__"];
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var objectToString = objectProto.toString;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    var splice = arrayProto.splice;
    var Map2 = getNative(root, "Map");
    var nativeCreate = getNative(Object, "create");
    function Hash(entries) {
      var index = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
    }
    function hashDelete(key) {
      return this.has(key) && delete this.__data__[key];
    }
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    function hashSet(key, value) {
      var data = this.__data__;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
      var index = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function listCacheClear() {
      this.__data__ = [];
    }
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      return true;
    }
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
      var index = -1, length = entries ? entries.length : 0;
      this.clear();
      while (++index < length) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function mapCacheClear() {
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    function mapCacheDelete(key) {
      return getMapData(this, key)["delete"](key);
    }
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    function mapCacheSet(key, value) {
      getMapData(this, key).set(key, value);
      return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function assocIndexOf(array, key) {
      var length = array.length;
      while (length--) {
        if (eq(array[length][0], key)) {
          return length;
        }
      }
      return -1;
    }
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) || isHostObject(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e) {
        }
        try {
          return func + "";
        } catch (e) {
        }
      }
      return "";
    }
    function memoize2(func, resolver2) {
      if (typeof func != "function" || resolver2 && typeof resolver2 != "function") {
        throw new TypeError(FUNC_ERROR_TEXT);
      }
      var memoized = function() {
        var args = arguments, key = resolver2 ? resolver2.apply(this, args) : args[0], cache = memoized.cache;
        if (cache.has(key)) {
          return cache.get(key);
        }
        var result = func.apply(this, args);
        memoized.cache = cache.set(key, result);
        return result;
      };
      memoized.cache = new (memoize2.Cache || MapCache)();
      return memoized;
    }
    memoize2.Cache = MapCache;
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    function isFunction(value) {
      var tag = isObject(value) ? objectToString.call(value) : "";
      return tag == funcTag || tag == genTag;
    }
    function isObject(value) {
      var type = typeof value;
      return !!value && (type == "object" || type == "function");
    }
    module.exports = memoize2;
  }
});

// node_modules/react-time-picker/node_modules/get-user-locale/dist/esm/index.js
var esm_exports = {};
__export(esm_exports, {
  default: () => esm_default,
  getUserLocale: () => getUserLocale,
  getUserLocales: () => getUserLocales
});
function resolver(options) {
  return JSON.stringify(options);
}
function uniqDefined(arr) {
  return arr.filter(function(el, index) {
    return el && arr.indexOf(el) === index;
  });
}
function normalizeLocales(arr) {
  return arr.map(function(el) {
    if (!el || el.indexOf("-") === -1 || el.toLowerCase() !== el) {
      return el;
    }
    var splitEl = el.split("-");
    return splitEl[0] + "-" + splitEl[1].toUpperCase();
  });
}
function getUserLocalesInternal(_temp) {
  var _ref = _temp === void 0 ? {} : _temp, _ref$useFallbackLocal = _ref.useFallbackLocale, useFallbackLocale = _ref$useFallbackLocal === void 0 ? true : _ref$useFallbackLocal, _ref$fallbackLocale = _ref.fallbackLocale, fallbackLocale = _ref$fallbackLocale === void 0 ? "en-US" : _ref$fallbackLocale;
  var languageList = [];
  if (typeof window !== "undefined") {
    var _window = window, navigator2 = _window.navigator;
    languageList = languageList.concat(navigator2.languages, navigator2.language, navigator2.userLanguage, navigator2.browserLanguage, navigator2.systemLanguage);
  }
  if (useFallbackLocale) {
    languageList.push(fallbackLocale);
  }
  return normalizeLocales(uniqDefined(languageList));
}
function getUserLocaleInternal(options) {
  return getUserLocales(options)[0] || null;
}
var import_lodash, getUserLocales, getUserLocale, esm_default;
var init_esm = __esm({
  "node_modules/react-time-picker/node_modules/get-user-locale/dist/esm/index.js"() {
    import_lodash = __toESM(require_lodash());
    getUserLocales = (0, import_lodash.default)(getUserLocalesInternal, resolver);
    getUserLocale = (0, import_lodash.default)(getUserLocaleInternal, resolver);
    esm_default = getUserLocale;
  }
});

// node_modules/react-time-picker/dist/shared/dateFormatter.js
var require_dateFormatter = __commonJS({
  "node_modules/react-time-picker/dist/shared/dateFormatter.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getFormatter = getFormatter;
    exports.getNumberFormatter = getNumberFormatter;
    var _getUserLocale = _interopRequireDefault((init_esm(), __toCommonJS(esm_exports)));
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var formatterCache = /* @__PURE__ */ new Map();
    function getFormatter(options) {
      return function(locale, date) {
        var localeWithDefault = locale || (0, _getUserLocale["default"])();
        if (!formatterCache.has(localeWithDefault)) {
          formatterCache.set(localeWithDefault, /* @__PURE__ */ new Map());
        }
        var formatterCacheLocale = formatterCache.get(localeWithDefault);
        if (!formatterCacheLocale.has(options)) {
          formatterCacheLocale.set(options, new Intl.DateTimeFormat(localeWithDefault, options).format);
        }
        return formatterCacheLocale.get(options)(date);
      };
    }
    var numberFormatterCache = /* @__PURE__ */ new Map();
    function getNumberFormatter(options) {
      return function(locale, date) {
        var localeWithDefault = locale || (0, _getUserLocale["default"])();
        if (!numberFormatterCache.has(localeWithDefault)) {
          numberFormatterCache.set(localeWithDefault, /* @__PURE__ */ new Map());
        }
        var numberFormatterCacheLocale = numberFormatterCache.get(localeWithDefault);
        if (!numberFormatterCacheLocale.has(options)) {
          numberFormatterCacheLocale.set(options, new Intl.NumberFormat(localeWithDefault, options).format);
        }
        return numberFormatterCacheLocale.get(options)(date);
      };
    }
  }
});

// node_modules/react-time-picker/dist/shared/utils.js
var require_utils = __commonJS({
  "node_modules/react-time-picker/dist/shared/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getAmPmLabels = getAmPmLabels;
    exports.safeMax = safeMax;
    exports.safeMin = safeMin;
    var _dateFormatter = require_dateFormatter();
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _iterableToArrayLimit(arr, i) {
      var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
      if (null != _i) {
        var _s, _e, _x, _r, _arr = [], _n = true, _d = false;
        try {
          if (_x = (_i = _i.call(arr)).next, 0 === i) {
            if (Object(_i) !== _i)
              return;
            _n = false;
          } else
            for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = true)
              ;
        } catch (err) {
          _d = true, _e = err;
        } finally {
          try {
            if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r))
              return;
          } finally {
            if (_d)
              throw _e;
          }
        }
        return _arr;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    var nines = ["9", "\u0669"];
    var ninesRegExp = new RegExp("[".concat(nines.join(""), "]"));
    var amPmFormatter = (0, _dateFormatter.getFormatter)({
      hour: "numeric"
    });
    function getAmPmLabels(locale) {
      var amString = amPmFormatter(locale, new Date(2017, 0, 1, 9));
      var pmString = amPmFormatter(locale, new Date(2017, 0, 1, 21));
      var _amString$split = amString.split(ninesRegExp), _amString$split2 = _slicedToArray(_amString$split, 2), am1 = _amString$split2[0], am2 = _amString$split2[1];
      var _pmString$split = pmString.split(ninesRegExp), _pmString$split2 = _slicedToArray(_pmString$split, 2), pm1 = _pmString$split2[0], pm2 = _pmString$split2[1];
      if (pm2 !== void 0) {
        if (am1 !== pm1) {
          return [am1, pm1].map(function(el) {
            return el.trim();
          });
        }
        if (am2 !== pm2) {
          return [am2, pm2].map(function(el) {
            return el.trim();
          });
        }
      }
      return ["AM", "PM"];
    }
    function isValidNumber(num) {
      return num !== null && num !== false && !Number.isNaN(Number(num));
    }
    function safeMin() {
      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
        args[_key] = arguments[_key];
      }
      return Math.min.apply(Math, _toConsumableArray(args.filter(isValidNumber)));
    }
    function safeMax() {
      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {
        args[_key2] = arguments[_key2];
      }
      return Math.max.apply(Math, _toConsumableArray(args.filter(isValidNumber)));
    }
  }
});

// node_modules/react-time-picker/dist/TimeInput/Hour12Input.js
var require_Hour12Input = __commonJS({
  "node_modules/react-time-picker/dist/TimeInput/Hour12Input.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = Hour12Input;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _dateUtils = require_cjs4();
    var _Input = _interopRequireDefault(require_Input());
    var _dates = require_dates();
    var _propTypes2 = require_propTypes2();
    var _utils = require_utils();
    var _excluded = ["amPm", "hour", "maxTime", "minTime", "value"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _iterableToArrayLimit(arr, i) {
      var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
      if (null != _i) {
        var _s, _e, _x, _r, _arr = [], _n = true, _d = false;
        try {
          if (_x = (_i = _i.call(arr)).next, 0 === i) {
            if (Object(_i) !== _i)
              return;
            _n = false;
          } else
            for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = true)
              ;
        } catch (err) {
          _d = true, _e = err;
        } finally {
          try {
            if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r))
              return;
          } finally {
            if (_d)
              throw _e;
          }
        }
        return _arr;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function Hour12Input(_ref) {
      var amPm = _ref.amPm, hour = _ref.hour, maxTime = _ref.maxTime, minTime = _ref.minTime, value = _ref.value, otherProps = _objectWithoutProperties(_ref, _excluded);
      var maxHour = (0, _utils.safeMin)(12, maxTime && function() {
        var _convert24to = (0, _dates.convert24to12)((0, _dateUtils.getHours)(maxTime)), _convert24to2 = _slicedToArray(_convert24to, 2), maxHourResult = _convert24to2[0], maxAmPm = _convert24to2[1];
        if (maxAmPm !== amPm) {
          return null;
        }
        return maxHourResult;
      }());
      var minHour = (0, _utils.safeMax)(1, minTime && function() {
        var _convert24to3 = (0, _dates.convert24to12)((0, _dateUtils.getHours)(minTime)), _convert24to4 = _slicedToArray(_convert24to3, 2), minHourResult = _convert24to4[0], minAmPm = _convert24to4[1];
        if (minAmPm !== amPm || minHourResult === 12) {
          return null;
        }
        return minHourResult;
      }());
      var value12 = value ? (0, _dates.convert24to12)(value)[0].toString() : "";
      return _react["default"].createElement(_Input["default"], _extends({
        max: maxHour,
        min: minHour,
        name: "hour12",
        nameForClass: "hour",
        value: value12
      }, otherProps));
    }
    Hour12Input.propTypes = {
      amPm: _propTypes["default"].string,
      ariaLabel: _propTypes["default"].string,
      className: _propTypes["default"].string.isRequired,
      disabled: _propTypes["default"].bool,
      hour: _propTypes["default"].string,
      inputRef: _propTypes2.isRef,
      maxTime: _propTypes2.isTime,
      minTime: _propTypes2.isTime,
      onChange: _propTypes["default"].func,
      onKeyDown: _propTypes["default"].func,
      onKeyUp: _propTypes["default"].func,
      placeholder: _propTypes["default"].string,
      required: _propTypes["default"].bool,
      showLeadingZeros: _propTypes["default"].bool,
      value: _propTypes["default"].string
    };
  }
});

// node_modules/react-time-picker/dist/TimeInput/Hour24Input.js
var require_Hour24Input = __commonJS({
  "node_modules/react-time-picker/dist/TimeInput/Hour24Input.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = Hour24Input;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _dateUtils = require_cjs4();
    var _Input = _interopRequireDefault(require_Input());
    var _propTypes2 = require_propTypes2();
    var _utils = require_utils();
    var _excluded = ["hour", "maxTime", "minTime"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function Hour24Input(_ref) {
      var hour = _ref.hour, maxTime = _ref.maxTime, minTime = _ref.minTime, otherProps = _objectWithoutProperties(_ref, _excluded);
      var maxHour = (0, _utils.safeMin)(23, maxTime && (0, _dateUtils.getHours)(maxTime));
      var minHour = (0, _utils.safeMax)(0, minTime && (0, _dateUtils.getHours)(minTime));
      return _react["default"].createElement(_Input["default"], _extends({
        max: maxHour,
        min: minHour,
        name: "hour24",
        nameForClass: "hour"
      }, otherProps));
    }
    Hour24Input.propTypes = {
      ariaLabel: _propTypes["default"].string,
      className: _propTypes["default"].string.isRequired,
      disabled: _propTypes["default"].bool,
      hour: _propTypes["default"].string,
      inputRef: _propTypes2.isRef,
      maxTime: _propTypes2.isTime,
      minTime: _propTypes2.isTime,
      onChange: _propTypes["default"].func,
      onKeyDown: _propTypes["default"].func,
      onKeyUp: _propTypes["default"].func,
      placeholder: _propTypes["default"].string,
      required: _propTypes["default"].bool,
      showLeadingZeros: _propTypes["default"].bool,
      value: _propTypes["default"].string
    };
  }
});

// node_modules/react-time-picker/dist/TimeInput/MinuteInput.js
var require_MinuteInput = __commonJS({
  "node_modules/react-time-picker/dist/TimeInput/MinuteInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = MinuteInput;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _dateUtils = require_cjs4();
    var _Input = _interopRequireDefault(require_Input());
    var _propTypes2 = require_propTypes2();
    var _utils = require_utils();
    var _excluded = ["hour", "maxTime", "minTime", "showLeadingZeros"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function MinuteInput(_ref) {
      var hour = _ref.hour, maxTime = _ref.maxTime, minTime = _ref.minTime, _ref$showLeadingZeros = _ref.showLeadingZeros, showLeadingZeros = _ref$showLeadingZeros === void 0 ? true : _ref$showLeadingZeros, otherProps = _objectWithoutProperties(_ref, _excluded);
      function isSameHour(date) {
        return date && hour === (0, _dateUtils.getHours)(date).toString();
      }
      var maxMinute = (0, _utils.safeMin)(59, isSameHour(maxTime) && (0, _dateUtils.getMinutes)(maxTime));
      var minMinute = (0, _utils.safeMax)(0, isSameHour(minTime) && (0, _dateUtils.getMinutes)(minTime));
      return _react["default"].createElement(_Input["default"], _extends({
        max: maxMinute,
        min: minMinute,
        name: "minute",
        showLeadingZeros
      }, otherProps));
    }
    MinuteInput.propTypes = {
      ariaLabel: _propTypes["default"].string,
      className: _propTypes["default"].string.isRequired,
      disabled: _propTypes["default"].bool,
      hour: _propTypes["default"].string,
      inputRef: _propTypes2.isRef,
      maxTime: _propTypes2.isTime,
      minTime: _propTypes2.isTime,
      onChange: _propTypes["default"].func,
      onKeyDown: _propTypes["default"].func,
      onKeyUp: _propTypes["default"].func,
      placeholder: _propTypes["default"].string,
      required: _propTypes["default"].bool,
      showLeadingZeros: _propTypes["default"].bool,
      value: _propTypes["default"].string
    };
  }
});

// node_modules/react-time-picker/dist/TimeInput/SecondInput.js
var require_SecondInput = __commonJS({
  "node_modules/react-time-picker/dist/TimeInput/SecondInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = SecondInput;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _dateUtils = require_cjs4();
    var _Input = _interopRequireDefault(require_Input());
    var _propTypes2 = require_propTypes2();
    var _utils = require_utils();
    var _excluded = ["hour", "maxTime", "minTime", "minute", "showLeadingZeros"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function SecondInput(_ref) {
      var hour = _ref.hour, maxTime = _ref.maxTime, minTime = _ref.minTime, minute = _ref.minute, _ref$showLeadingZeros = _ref.showLeadingZeros, showLeadingZeros = _ref$showLeadingZeros === void 0 ? true : _ref$showLeadingZeros, otherProps = _objectWithoutProperties(_ref, _excluded);
      function isSameMinute(date) {
        return date && hour === (0, _dateUtils.getHours)(date).toString() && minute === (0, _dateUtils.getMinutes)(date).toString();
      }
      var maxSecond = (0, _utils.safeMin)(59, isSameMinute(maxTime) && (0, _dateUtils.getSeconds)(maxTime));
      var minSecond = (0, _utils.safeMax)(0, isSameMinute(minTime) && (0, _dateUtils.getSeconds)(minTime));
      return _react["default"].createElement(_Input["default"], _extends({
        max: maxSecond,
        min: minSecond,
        name: "second",
        showLeadingZeros
      }, otherProps));
    }
    SecondInput.propTypes = {
      ariaLabel: _propTypes["default"].string,
      className: _propTypes["default"].string.isRequired,
      disabled: _propTypes["default"].bool,
      hour: _propTypes["default"].string,
      inputRef: _propTypes2.isRef,
      maxTime: _propTypes2.isTime,
      minTime: _propTypes2.isTime,
      minute: _propTypes["default"].string,
      onChange: _propTypes["default"].func,
      onKeyDown: _propTypes["default"].func,
      onKeyUp: _propTypes["default"].func,
      placeholder: _propTypes["default"].string,
      required: _propTypes["default"].bool,
      showLeadingZeros: _propTypes["default"].bool,
      value: _propTypes["default"].string
    };
  }
});

// node_modules/react-time-picker/dist/TimeInput/NativeInput.js
var require_NativeInput = __commonJS({
  "node_modules/react-time-picker/dist/TimeInput/NativeInput.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = NativeInput;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _dateUtils = require_cjs4();
    var _propTypes2 = require_propTypes2();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function NativeInput(_ref) {
      var ariaLabel = _ref.ariaLabel, disabled = _ref.disabled, maxTime = _ref.maxTime, minTime = _ref.minTime, name = _ref.name, onChange = _ref.onChange, required = _ref.required, value = _ref.value, valueType = _ref.valueType;
      var nativeValueParser = function() {
        switch (valueType) {
          case "hour":
            return function(receivedValue) {
              return "".concat((0, _dateUtils.getHours)(receivedValue), ":00");
            };
          case "minute":
            return _dateUtils.getHoursMinutes;
          case "second":
            return _dateUtils.getHoursMinutesSeconds;
          default:
            throw new Error("Invalid valueType.");
        }
      }();
      var step = function() {
        switch (valueType) {
          case "hour":
            return 3600;
          case "minute":
            return 60;
          case "second":
            return 1;
          default:
            throw new Error("Invalid valueType.");
        }
      }();
      function stopPropagation(event) {
        event.stopPropagation();
      }
      return _react["default"].createElement("input", {
        "aria-label": ariaLabel,
        disabled,
        hidden: true,
        max: maxTime ? nativeValueParser(maxTime) : null,
        min: minTime ? nativeValueParser(minTime) : null,
        name,
        onChange,
        onFocus: stopPropagation,
        required,
        step,
        style: {
          visibility: "hidden",
          position: "absolute",
          zIndex: "-999"
        },
        type: "time",
        value: value ? nativeValueParser(value) : ""
      });
    }
    NativeInput.propTypes = {
      ariaLabel: _propTypes["default"].string,
      disabled: _propTypes["default"].bool,
      maxTime: _propTypes2.isTime,
      minTime: _propTypes2.isTime,
      name: _propTypes["default"].string,
      onChange: _propTypes["default"].func,
      required: _propTypes["default"].bool,
      value: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].instanceOf(Date)]),
      valueType: _propTypes2.isValueType
    };
  }
});

// node_modules/react-time-picker/dist/TimeInput/AmPm.js
var require_AmPm = __commonJS({
  "node_modules/react-time-picker/dist/TimeInput/AmPm.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = AmPm;
    var _react = _interopRequireDefault(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _clsx = _interopRequireDefault((init_clsx_m(), __toCommonJS(clsx_m_exports)));
    var _dateUtils = require_cjs4();
    var _dates = require_dates();
    var _propTypes2 = require_propTypes2();
    var _utils = require_utils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _iterableToArrayLimit(arr, i) {
      var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
      if (null != _i) {
        var _s, _e, _x, _r, _arr = [], _n = true, _d = false;
        try {
          if (_x = (_i = _i.call(arr)).next, 0 === i) {
            if (Object(_i) !== _i)
              return;
            _n = false;
          } else
            for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = true)
              ;
        } catch (err) {
          _d = true, _e = err;
        } finally {
          try {
            if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r))
              return;
          } finally {
            if (_d)
              throw _e;
          }
        }
        return _arr;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function AmPm(_ref) {
      var ariaLabel = _ref.ariaLabel, className = _ref.className, disabled = _ref.disabled, inputRef = _ref.inputRef, locale = _ref.locale, maxTime = _ref.maxTime, minTime = _ref.minTime, onChange = _ref.onChange, onKeyDown = _ref.onKeyDown, required = _ref.required, value = _ref.value;
      var amDisabled = minTime && (0, _dates.convert24to12)((0, _dateUtils.getHours)(minTime))[1] === "pm";
      var pmDisabled = maxTime && (0, _dates.convert24to12)((0, _dateUtils.getHours)(maxTime))[1] === "am";
      var name = "amPm";
      var _getAmPmLabels = (0, _utils.getAmPmLabels)(locale), _getAmPmLabels2 = _slicedToArray(_getAmPmLabels, 2), amLabel = _getAmPmLabels2[0], pmLabel = _getAmPmLabels2[1];
      return _react["default"].createElement("select", {
        "aria-label": ariaLabel,
        className: (0, _clsx["default"])("".concat(className, "__input"), "".concat(className, "__").concat(name)),
        "data-input": "true",
        "data-select": "true",
        disabled,
        name,
        onChange,
        onKeyDown,
        ref: inputRef,
        required,
        value: value !== null ? value : ""
      }, !value && _react["default"].createElement("option", {
        value: ""
      }, "--"), _react["default"].createElement("option", {
        disabled: amDisabled,
        value: "am"
      }, amLabel), _react["default"].createElement("option", {
        disabled: pmDisabled,
        value: "pm"
      }, pmLabel));
    }
    AmPm.propTypes = {
      ariaLabel: _propTypes["default"].string,
      className: _propTypes["default"].string.isRequired,
      disabled: _propTypes["default"].bool,
      inputRef: _propTypes2.isRef,
      locale: _propTypes["default"].string,
      maxTime: _propTypes2.isTime,
      minTime: _propTypes2.isTime,
      onChange: _propTypes["default"].func,
      onKeyDown: _propTypes["default"].func,
      required: _propTypes["default"].bool,
      value: _propTypes["default"].oneOf(["am", "pm"])
    };
  }
});

// node_modules/react-time-picker/dist/TimeInput.js
var require_TimeInput = __commonJS({
  "node_modules/react-time-picker/dist/TimeInput.js"(exports) {
    "use strict";
    function _typeof(obj) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
        return typeof obj2;
      } : function(obj2) {
        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _dateUtils = require_cjs4();
    var _Divider = _interopRequireDefault(require_Divider());
    var _Hour12Input = _interopRequireDefault(require_Hour12Input());
    var _Hour24Input = _interopRequireDefault(require_Hour24Input());
    var _MinuteInput = _interopRequireDefault(require_MinuteInput());
    var _SecondInput = _interopRequireDefault(require_SecondInput());
    var _NativeInput = _interopRequireDefault(require_NativeInput());
    var _AmPm = _interopRequireDefault(require_AmPm());
    var _dateFormatter = require_dateFormatter();
    var _dates = require_dates();
    var _propTypes2 = require_propTypes2();
    var _utils = require_utils();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _iterableToArrayLimit(arr, i) {
      var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
      if (null != _i) {
        var _s, _e, _x, _r, _arr = [], _n = true, _d = false;
        try {
          if (_x = (_i = _i.call(arr)).next, 0 === i) {
            if (Object(_i) !== _i)
              return;
            _n = false;
          } else
            for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = true)
              ;
        } catch (err) {
          _d = true, _e = err;
        } finally {
          try {
            if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r))
              return;
          } finally {
            if (_d)
              throw _e;
          }
        }
        return _arr;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(arg) {
      var key = _toPrimitive(arg, "string");
      return _typeof(key) === "symbol" ? key : String(key);
    }
    function _toPrimitive(input, hint) {
      if (_typeof(input) !== "object" || input === null)
        return input;
      var prim = input[Symbol.toPrimitive];
      if (prim !== void 0) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object")
          return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (hint === "string" ? String : Number)(input);
    }
    function _toConsumableArray(arr) {
      return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
    }
    function _nonIterableSpread() {
      throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _iterableToArray(iter) {
      if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null)
        return Array.from(iter);
    }
    function _arrayWithoutHoles(arr) {
      if (Array.isArray(arr))
        return _arrayLikeToArray(arr);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    var getFormatterOptionsCache = {};
    var allViews = ["hour", "minute", "second"];
    function hoursAreDifferent(date1, date2) {
      return date1 && !date2 || !date1 && date2 || date1 && date2 && date1 !== date2;
    }
    function isInternalInput(element) {
      return element.dataset.input === "true";
    }
    function findInput(element, property) {
      var nextElement = element;
      do {
        nextElement = nextElement[property];
      } while (nextElement && !isInternalInput(nextElement));
      return nextElement;
    }
    function focus(element) {
      if (element) {
        element.focus();
      }
    }
    function _renderCustomInputs(placeholder, elementFunctions, allowMultipleInstances) {
      var usedFunctions = [];
      var pattern = new RegExp(Object.keys(elementFunctions).map(function(el) {
        return "".concat(el, "+");
      }).join("|"), "g");
      var matches = placeholder.match(pattern);
      return placeholder.split(pattern).reduce(function(arr, element, index) {
        var divider = element && _react["default"].createElement(_Divider["default"], {
          key: "separator_".concat(index)
        }, element);
        var res = [].concat(_toConsumableArray(arr), [divider]);
        var currentMatch = matches && matches[index];
        if (currentMatch) {
          var renderFunction = elementFunctions[currentMatch] || elementFunctions[Object.keys(elementFunctions).find(function(elementFunction) {
            return currentMatch.match(elementFunction);
          })];
          if (!allowMultipleInstances && usedFunctions.includes(renderFunction)) {
            res.push(currentMatch);
          } else {
            res.push(renderFunction(currentMatch, index));
            usedFunctions.push(renderFunction);
          }
        }
        return res;
      }, []);
    }
    var formatNumber = (0, _dateFormatter.getNumberFormatter)({
      useGrouping: false
    });
    var TimeInput = function(_PureComponent) {
      _inherits(TimeInput2, _PureComponent);
      var _super = _createSuper(TimeInput2);
      function TimeInput2() {
        var _this;
        _classCallCheck(this, TimeInput2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty(_assertThisInitialized(_this), "state", {
          amPm: null,
          hour: null,
          minute: null,
          second: null
        });
        _defineProperty(_assertThisInitialized(_this), "amPmInput", (0, _react.createRef)());
        _defineProperty(_assertThisInitialized(_this), "hour12Input", (0, _react.createRef)());
        _defineProperty(_assertThisInitialized(_this), "hour24Input", (0, _react.createRef)());
        _defineProperty(_assertThisInitialized(_this), "minuteInput", (0, _react.createRef)());
        _defineProperty(_assertThisInitialized(_this), "secondInput", (0, _react.createRef)());
        _defineProperty(_assertThisInitialized(_this), "onClick", function(event) {
          if (event.target === event.currentTarget) {
            var firstInput = event.target.children[1];
            focus(firstInput);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "onKeyDown", function(event) {
          switch (event.key) {
            case "ArrowLeft":
            case "ArrowRight":
            case _this.divider: {
              event.preventDefault();
              var input = event.target;
              var property = event.key === "ArrowLeft" ? "previousElementSibling" : "nextElementSibling";
              var nextInput = findInput(input, property);
              focus(nextInput);
              break;
            }
            default:
          }
        });
        _defineProperty(_assertThisInitialized(_this), "onKeyUp", function(event) {
          var key = event.key, input = event.target;
          var isNumberKey = !isNaN(parseInt(key, 10));
          if (!isNumberKey) {
            return;
          }
          var value = input.value;
          var max = input.getAttribute("max");
          if (value * 10 > max || value.length >= max.length) {
            var property = "nextElementSibling";
            var nextInput = findInput(input, property);
            focus(nextInput);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "onChange", function(event) {
          var _event$target = event.target, name = _event$target.name, value = _event$target.value;
          switch (name) {
            case "hour12": {
              _this.setState(function(prevState) {
                return {
                  hour: value ? (0, _dates.convert12to24)(parseInt(value, 10), prevState.amPm).toString() : ""
                };
              }, _this.onChangeExternal);
              break;
            }
            case "hour24": {
              _this.setState({
                hour: value
              }, _this.onChangeExternal);
              break;
            }
            default: {
              _this.setState(_defineProperty({}, name, value), _this.onChangeExternal);
            }
          }
        });
        _defineProperty(_assertThisInitialized(_this), "onChangeNative", function(event) {
          var onChange = _this.props.onChange;
          var value = event.target.value;
          if (!onChange) {
            return;
          }
          var processedValue = function() {
            if (!value) {
              return null;
            }
            return value;
          }();
          onChange(processedValue, false);
        });
        _defineProperty(_assertThisInitialized(_this), "onChangeAmPm", function(event) {
          var value = event.target.value;
          _this.setState({
            amPm: value
          }, _this.onChangeExternal);
        });
        _defineProperty(_assertThisInitialized(_this), "onChangeExternal", function() {
          var onChange = _this.props.onChange;
          if (!onChange) {
            return;
          }
          var formElements = [_this.amPmInput.current, _this.hour12Input.current, _this.hour24Input.current, _this.minuteInput.current, _this.secondInput.current].filter(Boolean);
          var formElementsWithoutSelect = formElements.slice(1);
          var values = {};
          formElements.forEach(function(formElement) {
            values[formElement.name] = formElement.value;
          });
          if (formElementsWithoutSelect.every(function(formElement) {
            return !formElement.value;
          })) {
            onChange(null, false);
          } else if (formElements.every(function(formElement) {
            return formElement.value && formElement.validity.valid;
          })) {
            var hour = parseInt(values.hour24 || (0, _dates.convert12to24)(values.hour12, values.amPm) || 0, 10);
            var minute = parseInt(values.minute || 0, 10);
            var second = parseInt(values.second || 0, 10);
            var padStart = function padStart2(num) {
              return "0".concat(num).slice(-2);
            };
            var proposedValue = "".concat(padStart(hour), ":").concat(padStart(minute), ":").concat(padStart(second));
            var processedValue = _this.getProcessedValue(proposedValue);
            onChange(processedValue, false);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "renderHour", function(currentMatch, index) {
          if (/h/.test(currentMatch)) {
            return _this.renderHour12(currentMatch, index);
          }
          return _this.renderHour24(currentMatch, index);
        });
        _defineProperty(_assertThisInitialized(_this), "renderHour12", function(currentMatch, index) {
          var _this$props = _this.props, autoFocus = _this$props.autoFocus, hourAriaLabel = _this$props.hourAriaLabel, hourPlaceholder = _this$props.hourPlaceholder;
          var _this$state = _this.state, amPm = _this$state.amPm, hour = _this$state.hour;
          if (currentMatch && currentMatch.length > 2) {
            throw new Error("Unsupported token: ".concat(currentMatch));
          }
          var showLeadingZeros = currentMatch && currentMatch.length === 2;
          return _react["default"].createElement(_Hour12Input["default"], _extends({
            key: "hour12"
          }, _this.commonInputProps, {
            amPm,
            ariaLabel: hourAriaLabel,
            autoFocus: index === 0 && autoFocus,
            inputRef: _this.hour12Input,
            placeholder: hourPlaceholder,
            showLeadingZeros,
            value: hour
          }));
        });
        _defineProperty(_assertThisInitialized(_this), "renderHour24", function(currentMatch, index) {
          var _this$props2 = _this.props, autoFocus = _this$props2.autoFocus, hourAriaLabel = _this$props2.hourAriaLabel, hourPlaceholder = _this$props2.hourPlaceholder;
          var hour = _this.state.hour;
          if (currentMatch && currentMatch.length > 2) {
            throw new Error("Unsupported token: ".concat(currentMatch));
          }
          var showLeadingZeros = currentMatch && currentMatch.length === 2;
          return _react["default"].createElement(_Hour24Input["default"], _extends({
            key: "hour24"
          }, _this.commonInputProps, {
            ariaLabel: hourAriaLabel,
            autoFocus: index === 0 && autoFocus,
            inputRef: _this.hour24Input,
            placeholder: hourPlaceholder,
            showLeadingZeros,
            value: hour
          }));
        });
        _defineProperty(_assertThisInitialized(_this), "renderMinute", function(currentMatch, index) {
          var _this$props3 = _this.props, autoFocus = _this$props3.autoFocus, minuteAriaLabel = _this$props3.minuteAriaLabel, minutePlaceholder = _this$props3.minutePlaceholder;
          var _this$state2 = _this.state, hour = _this$state2.hour, minute = _this$state2.minute;
          if (currentMatch && currentMatch.length > 2) {
            throw new Error("Unsupported token: ".concat(currentMatch));
          }
          var showLeadingZeros = currentMatch && currentMatch.length === 2;
          return _react["default"].createElement(_MinuteInput["default"], _extends({
            key: "minute"
          }, _this.commonInputProps, {
            ariaLabel: minuteAriaLabel,
            autoFocus: index === 0 && autoFocus,
            hour,
            inputRef: _this.minuteInput,
            placeholder: minutePlaceholder,
            showLeadingZeros,
            value: minute
          }));
        });
        _defineProperty(_assertThisInitialized(_this), "renderSecond", function(currentMatch, index) {
          var _this$props4 = _this.props, autoFocus = _this$props4.autoFocus, secondAriaLabel = _this$props4.secondAriaLabel, secondPlaceholder = _this$props4.secondPlaceholder;
          var _this$state3 = _this.state, hour = _this$state3.hour, minute = _this$state3.minute, second = _this$state3.second;
          if (currentMatch && currentMatch.length > 2) {
            throw new Error("Unsupported token: ".concat(currentMatch));
          }
          var showLeadingZeros = currentMatch ? currentMatch.length === 2 : true;
          return _react["default"].createElement(_SecondInput["default"], _extends({
            key: "second"
          }, _this.commonInputProps, {
            ariaLabel: secondAriaLabel,
            autoFocus: index === 0 && autoFocus,
            hour,
            inputRef: _this.secondInput,
            minute,
            placeholder: secondPlaceholder,
            showLeadingZeros,
            value: second
          }));
        });
        _defineProperty(_assertThisInitialized(_this), "renderAmPm", function(currentMatch, index) {
          var _this$props5 = _this.props, amPmAriaLabel = _this$props5.amPmAriaLabel, autoFocus = _this$props5.autoFocus, locale = _this$props5.locale;
          var amPm = _this.state.amPm;
          return _react["default"].createElement(_AmPm["default"], _extends({
            key: "ampm"
          }, _this.commonInputProps, {
            ariaLabel: amPmAriaLabel,
            autoFocus: index === 0 && autoFocus,
            inputRef: _this.amPmInput,
            locale,
            onChange: _this.onChangeAmPm,
            value: amPm
          }));
        });
        return _this;
      }
      _createClass(TimeInput2, [{
        key: "formatTime",
        get: function get() {
          var maxDetail = this.props.maxDetail;
          var level = allViews.indexOf(maxDetail);
          var formatterOptions = getFormatterOptionsCache[level] || function() {
            var options = {
              hour: "numeric"
            };
            if (level >= 1) {
              options.minute = "numeric";
            }
            if (level >= 2) {
              options.second = "numeric";
            }
            getFormatterOptionsCache[level] = options;
            return options;
          }();
          return (0, _dateFormatter.getFormatter)(formatterOptions);
        }
      }, {
        key: "formatNumber",
        get: function get() {
          return formatNumber;
        }
      }, {
        key: "getProcessedValue",
        value: function getProcessedValue(value) {
          var _this2 = this;
          var processFunction = function() {
            switch (_this2.valueType) {
              case "hour":
              case "minute":
                return _dateUtils.getHoursMinutes;
              case "second":
                return _dateUtils.getHoursMinutesSeconds;
              default:
                throw new Error("Invalid valueType.");
            }
          }();
          return processFunction(value);
        }
      }, {
        key: "valueType",
        get: function get() {
          var maxDetail = this.props.maxDetail;
          return maxDetail;
        }
      }, {
        key: "divider",
        get: function get() {
          var dividers = this.placeholder.match(/[^0-9a-z]/i);
          return dividers ? dividers[0] : null;
        }
      }, {
        key: "placeholder",
        get: function get() {
          var _this$props6 = this.props, format = _this$props6.format, locale = _this$props6.locale;
          if (format) {
            return format;
          }
          var hour24 = 21;
          var hour12 = 9;
          var minute = 13;
          var second = 14;
          var date = new Date(2017, 0, 1, hour24, minute, second);
          return this.formatTime(locale, date).replace(this.formatNumber(locale, hour12), "h").replace(this.formatNumber(locale, hour24), "H").replace(this.formatNumber(locale, minute), "mm").replace(this.formatNumber(locale, second), "ss").replace(new RegExp((0, _utils.getAmPmLabels)(locale).join("|")), "a");
        }
      }, {
        key: "commonInputProps",
        get: function get() {
          var _this$props7 = this.props, className = _this$props7.className, disabled = _this$props7.disabled, isClockOpen = _this$props7.isClockOpen, maxTime = _this$props7.maxTime, minTime = _this$props7.minTime, required = _this$props7.required;
          return {
            className,
            disabled,
            maxTime,
            minTime,
            onChange: this.onChange,
            onKeyDown: this.onKeyDown,
            onKeyUp: this.onKeyUp,
            placeholder: "--",
            required: required || isClockOpen
          };
        }
      }, {
        key: "renderCustomInputs",
        value: function renderCustomInputs() {
          var placeholder = this.placeholder;
          var format = this.props.format;
          var elementFunctions = {
            h: this.renderHour,
            H: this.renderHour,
            m: this.renderMinute,
            s: this.renderSecond,
            a: this.renderAmPm
          };
          var allowMultipleInstances = typeof format !== "undefined";
          return _renderCustomInputs(placeholder, elementFunctions, allowMultipleInstances);
        }
      }, {
        key: "renderNativeInput",
        value: function renderNativeInput() {
          var _this$props8 = this.props, disabled = _this$props8.disabled, maxTime = _this$props8.maxTime, minTime = _this$props8.minTime, name = _this$props8.name, nativeInputAriaLabel = _this$props8.nativeInputAriaLabel, required = _this$props8.required, value = _this$props8.value;
          return _react["default"].createElement(_NativeInput["default"], {
            key: "time",
            ariaLabel: nativeInputAriaLabel,
            disabled,
            maxTime,
            minTime,
            name,
            onChange: this.onChangeNative,
            required,
            value,
            valueType: this.valueType
          });
        }
      }, {
        key: "render",
        value: function render() {
          var className = this.props.className;
          return _react["default"].createElement("div", {
            className,
            onClick: this.onClick
          }, this.renderNativeInput(), this.renderCustomInputs());
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          var nextState = {};
          if (nextProps.isClockOpen !== prevState.isClockOpen) {
            nextState.isClockOpen = nextProps.isClockOpen;
          }
          var nextValue = nextProps.value;
          if (nextState.isClockOpen || hoursAreDifferent(nextValue, prevState.value)) {
            if (nextValue) {
              var _convert24to = (0, _dates.convert24to12)((0, _dateUtils.getHours)(nextValue));
              var _convert24to2 = _slicedToArray(_convert24to, 2);
              nextState.amPm = _convert24to2[1];
              nextState.hour = (0, _dateUtils.getHours)(nextValue).toString();
              nextState.minute = (0, _dateUtils.getMinutes)(nextValue).toString();
              nextState.second = (0, _dateUtils.getSeconds)(nextValue).toString();
            } else {
              nextState.amPm = null;
              nextState.hour = null;
              nextState.minute = null;
              nextState.second = null;
            }
            nextState.value = nextValue;
          }
          return nextState;
        }
      }]);
      return TimeInput2;
    }(_react.PureComponent);
    exports["default"] = TimeInput;
    TimeInput.defaultProps = {
      maxDetail: "minute",
      name: "time"
    };
    TimeInput.propTypes = {
      amPmAriaLabel: _propTypes["default"].string,
      autoFocus: _propTypes["default"].bool,
      className: _propTypes["default"].string.isRequired,
      disabled: _propTypes["default"].bool,
      format: _propTypes["default"].string,
      hourAriaLabel: _propTypes["default"].string,
      hourPlaceholder: _propTypes["default"].string,
      isClockOpen: _propTypes["default"].bool,
      locale: _propTypes["default"].string,
      maxDetail: _propTypes["default"].oneOf(allViews),
      maxTime: _propTypes2.isTime,
      minTime: _propTypes2.isTime,
      minuteAriaLabel: _propTypes["default"].string,
      minutePlaceholder: _propTypes["default"].string,
      name: _propTypes["default"].string,
      nativeInputAriaLabel: _propTypes["default"].string,
      onChange: _propTypes["default"].func,
      required: _propTypes["default"].bool,
      secondAriaLabel: _propTypes["default"].string,
      secondPlaceholder: _propTypes["default"].string,
      value: _propTypes["default"].oneOfType([_propTypes2.isTime, _propTypes["default"].instanceOf(Date)])
    };
  }
});

// node_modules/react-time-picker/dist/TimePicker.js
var require_TimePicker = __commonJS({
  "node_modules/react-time-picker/dist/TimePicker.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    var _react = _interopRequireWildcard(require_react());
    var _reactDom = require_react_dom();
    var _propTypes = _interopRequireDefault(require_prop_types());
    var _makeEventProps = _interopRequireDefault(require_cjs());
    var _clsx = _interopRequireDefault((init_clsx_m(), __toCommonJS(clsx_m_exports)));
    var _reactFit = _interopRequireDefault(require_cjs3());
    var _reactClock = _interopRequireDefault(require_cjs6());
    var _TimeInput = _interopRequireDefault(require_TimeInput());
    var _propTypes2 = require_propTypes2();
    var _excluded = ["clockClassName", "className", "maxDetail", "onChange", "portalContainer", "value"];
    var _excluded2 = ["onChange"];
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    function _getRequireWildcardCache(nodeInterop) {
      if (typeof WeakMap !== "function")
        return null;
      var cacheBabelInterop = /* @__PURE__ */ new WeakMap();
      var cacheNodeInterop = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function _getRequireWildcardCache2(nodeInterop2) {
        return nodeInterop2 ? cacheNodeInterop : cacheBabelInterop;
      })(nodeInterop);
    }
    function _interopRequireWildcard(obj, nodeInterop) {
      if (!nodeInterop && obj && obj.__esModule) {
        return obj;
      }
      if (obj === null || _typeof(obj) !== "object" && typeof obj !== "function") {
        return { "default": obj };
      }
      var cache = _getRequireWildcardCache(nodeInterop);
      if (cache && cache.has(obj)) {
        return cache.get(obj);
      }
      var newObj = {};
      var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var key in obj) {
        if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
          var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
          if (desc && (desc.get || desc.set)) {
            Object.defineProperty(newObj, key, desc);
          } else {
            newObj[key] = obj[key];
          }
        }
      }
      newObj["default"] = obj;
      if (cache) {
        cache.set(obj, newObj);
      }
      return newObj;
    }
    function _typeof(obj) {
      "@babel/helpers - typeof";
      return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(obj2) {
        return typeof obj2;
      } : function(obj2) {
        return obj2 && "function" == typeof Symbol && obj2.constructor === Symbol && obj2 !== Symbol.prototype ? "symbol" : typeof obj2;
      }, _typeof(obj);
    }
    function _objectWithoutProperties(source, excluded) {
      if (source == null)
        return {};
      var target = _objectWithoutPropertiesLoose(source, excluded);
      var key, i;
      if (Object.getOwnPropertySymbols) {
        var sourceSymbolKeys = Object.getOwnPropertySymbols(source);
        for (i = 0; i < sourceSymbolKeys.length; i++) {
          key = sourceSymbolKeys[i];
          if (excluded.indexOf(key) >= 0)
            continue;
          if (!Object.prototype.propertyIsEnumerable.call(source, key))
            continue;
          target[key] = source[key];
        }
      }
      return target;
    }
    function _objectWithoutPropertiesLoose(source, excluded) {
      if (source == null)
        return {};
      var target = {};
      var sourceKeys = Object.keys(source);
      var key, i;
      for (i = 0; i < sourceKeys.length; i++) {
        key = sourceKeys[i];
        if (excluded.indexOf(key) >= 0)
          continue;
        target[key] = source[key];
      }
      return target;
    }
    function _extends() {
      _extends = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends.apply(this, arguments);
    }
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o)
        return;
      if (typeof o === "string")
        return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor)
        n = o.constructor.name;
      if (n === "Map" || n === "Set")
        return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n))
        return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length)
        len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++)
        arr2[i] = arr[i];
      return arr2;
    }
    function _iterableToArrayLimit(arr, i) {
      var _i = null == arr ? null : "undefined" != typeof Symbol && arr[Symbol.iterator] || arr["@@iterator"];
      if (null != _i) {
        var _s, _e, _x, _r, _arr = [], _n = true, _d = false;
        try {
          if (_x = (_i = _i.call(arr)).next, 0 === i) {
            if (Object(_i) !== _i)
              return;
            _n = false;
          } else
            for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = true)
              ;
        } catch (err) {
          _d = true, _e = err;
        } finally {
          try {
            if (!_n && null != _i["return"] && (_r = _i["return"](), Object(_r) !== _r))
              return;
          } finally {
            if (_d)
              throw _e;
          }
        }
        return _arr;
      }
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr))
        return arr;
    }
    function _classCallCheck(instance, Constructor) {
      if (!(instance instanceof Constructor)) {
        throw new TypeError("Cannot call a class as a function");
      }
    }
    function _defineProperties(target, props) {
      for (var i = 0; i < props.length; i++) {
        var descriptor = props[i];
        descriptor.enumerable = descriptor.enumerable || false;
        descriptor.configurable = true;
        if ("value" in descriptor)
          descriptor.writable = true;
        Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor);
      }
    }
    function _createClass(Constructor, protoProps, staticProps) {
      if (protoProps)
        _defineProperties(Constructor.prototype, protoProps);
      if (staticProps)
        _defineProperties(Constructor, staticProps);
      Object.defineProperty(Constructor, "prototype", { writable: false });
      return Constructor;
    }
    function _inherits(subClass, superClass) {
      if (typeof superClass !== "function" && superClass !== null) {
        throw new TypeError("Super expression must either be null or a function");
      }
      subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } });
      Object.defineProperty(subClass, "prototype", { writable: false });
      if (superClass)
        _setPrototypeOf(subClass, superClass);
    }
    function _setPrototypeOf(o, p) {
      _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf2(o2, p2) {
        o2.__proto__ = p2;
        return o2;
      };
      return _setPrototypeOf(o, p);
    }
    function _createSuper(Derived) {
      var hasNativeReflectConstruct = _isNativeReflectConstruct();
      return function _createSuperInternal() {
        var Super = _getPrototypeOf(Derived), result;
        if (hasNativeReflectConstruct) {
          var NewTarget = _getPrototypeOf(this).constructor;
          result = Reflect.construct(Super, arguments, NewTarget);
        } else {
          result = Super.apply(this, arguments);
        }
        return _possibleConstructorReturn(this, result);
      };
    }
    function _possibleConstructorReturn(self2, call) {
      if (call && (_typeof(call) === "object" || typeof call === "function")) {
        return call;
      } else if (call !== void 0) {
        throw new TypeError("Derived constructors may only return object or undefined");
      }
      return _assertThisInitialized(self2);
    }
    function _assertThisInitialized(self2) {
      if (self2 === void 0) {
        throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
      }
      return self2;
    }
    function _isNativeReflectConstruct() {
      if (typeof Reflect === "undefined" || !Reflect.construct)
        return false;
      if (Reflect.construct.sham)
        return false;
      if (typeof Proxy === "function")
        return true;
      try {
        Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
        }));
        return true;
      } catch (e) {
        return false;
      }
    }
    function _getPrototypeOf(o) {
      _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf2(o2) {
        return o2.__proto__ || Object.getPrototypeOf(o2);
      };
      return _getPrototypeOf(o);
    }
    function _defineProperty(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(arg) {
      var key = _toPrimitive(arg, "string");
      return _typeof(key) === "symbol" ? key : String(key);
    }
    function _toPrimitive(input, hint) {
      if (_typeof(input) !== "object" || input === null)
        return input;
      var prim = input[Symbol.toPrimitive];
      if (prim !== void 0) {
        var res = prim.call(input, hint || "default");
        if (_typeof(res) !== "object")
          return res;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return (hint === "string" ? String : Number)(input);
    }
    var allViews = ["hour", "minute", "second"];
    var baseClassName = "react-time-picker";
    var outsideActionEvents = ["mousedown", "focusin", "touchstart"];
    var TimePicker = function(_PureComponent) {
      _inherits(TimePicker2, _PureComponent);
      var _super = _createSuper(TimePicker2);
      function TimePicker2() {
        var _this;
        _classCallCheck(this, TimePicker2);
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        _this = _super.call.apply(_super, [this].concat(args));
        _defineProperty(_assertThisInitialized(_this), "state", {});
        _defineProperty(_assertThisInitialized(_this), "wrapper", (0, _react.createRef)());
        _defineProperty(_assertThisInitialized(_this), "clockWrapper", (0, _react.createRef)());
        _defineProperty(_assertThisInitialized(_this), "onOutsideAction", function(event) {
          var _assertThisInitialize = _assertThisInitialized(_this), wrapper = _assertThisInitialize.wrapper, clockWrapper = _assertThisInitialize.clockWrapper;
          var target = "composedPath" in event ? event.composedPath()[0] : event.target;
          if (wrapper.current && !wrapper.current.contains(target) && (!clockWrapper.current || !clockWrapper.current.contains(target))) {
            _this.closeClock();
          }
        });
        _defineProperty(_assertThisInitialized(_this), "onChange", function(value) {
          var closeClock = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : _this.props.closeClock;
          var onChange = _this.props.onChange;
          if (closeClock) {
            _this.closeClock();
          }
          if (onChange) {
            onChange(value);
          }
        });
        _defineProperty(_assertThisInitialized(_this), "onFocus", function(event) {
          var _this$props = _this.props, disabled = _this$props.disabled, onFocus = _this$props.onFocus, openClockOnFocus = _this$props.openClockOnFocus;
          if (onFocus) {
            onFocus(event);
          }
          if (disabled) {
            return;
          }
          if (openClockOnFocus) {
            if (event.target.dataset.select === "true") {
              return;
            }
            _this.openClock();
          }
        });
        _defineProperty(_assertThisInitialized(_this), "onKeyDown", function(event) {
          if (event.key === "Escape") {
            _this.closeClock();
          }
        });
        _defineProperty(_assertThisInitialized(_this), "openClock", function() {
          _this.setState({
            isOpen: true
          });
        });
        _defineProperty(_assertThisInitialized(_this), "closeClock", function() {
          _this.setState(function(prevState) {
            if (!prevState.isOpen) {
              return null;
            }
            return {
              isOpen: false
            };
          });
        });
        _defineProperty(_assertThisInitialized(_this), "toggleClock", function() {
          _this.setState(function(prevState) {
            return {
              isOpen: !prevState.isOpen
            };
          });
        });
        _defineProperty(_assertThisInitialized(_this), "stopPropagation", function(event) {
          return event.stopPropagation();
        });
        _defineProperty(_assertThisInitialized(_this), "clear", function() {
          return _this.onChange(null);
        });
        return _this;
      }
      _createClass(TimePicker2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          this.handleOutsideActionListeners();
        }
      }, {
        key: "componentDidUpdate",
        value: function componentDidUpdate(prevProps, prevState) {
          var isOpen = this.state.isOpen;
          var _this$props2 = this.props, onClockClose = _this$props2.onClockClose, onClockOpen = _this$props2.onClockOpen;
          if (isOpen !== prevState.isOpen) {
            this.handleOutsideActionListeners();
            var callback = isOpen ? onClockOpen : onClockClose;
            if (callback)
              callback();
          }
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          this.handleOutsideActionListeners(false);
        }
      }, {
        key: "eventProps",
        get: function get() {
          return (0, _makeEventProps["default"])(this.props);
        }
      }, {
        key: "handleOutsideActionListeners",
        value: function handleOutsideActionListeners(shouldListen) {
          var _this2 = this;
          var isOpen = this.state.isOpen;
          var shouldListenWithFallback = typeof shouldListen !== "undefined" ? shouldListen : isOpen;
          var fnName = shouldListenWithFallback ? "addEventListener" : "removeEventListener";
          outsideActionEvents.forEach(function(eventName) {
            return document[fnName](eventName, _this2.onOutsideAction);
          });
          document[fnName]("keydown", this.onKeyDown);
        }
      }, {
        key: "renderInputs",
        value: function renderInputs() {
          var _this$props3 = this.props, amPmAriaLabel = _this$props3.amPmAriaLabel, autoFocus = _this$props3.autoFocus, clearAriaLabel = _this$props3.clearAriaLabel, clearIcon = _this$props3.clearIcon, clockAriaLabel = _this$props3.clockAriaLabel, clockIcon = _this$props3.clockIcon, disableClock = _this$props3.disableClock, disabled = _this$props3.disabled, format = _this$props3.format, hourAriaLabel = _this$props3.hourAriaLabel, hourPlaceholder = _this$props3.hourPlaceholder, isOpen = _this$props3.isOpen, locale = _this$props3.locale, maxDetail = _this$props3.maxDetail, maxTime = _this$props3.maxTime, minTime = _this$props3.minTime, minuteAriaLabel = _this$props3.minuteAriaLabel, minutePlaceholder = _this$props3.minutePlaceholder, name = _this$props3.name, nativeInputAriaLabel = _this$props3.nativeInputAriaLabel, required = _this$props3.required, secondAriaLabel = _this$props3.secondAriaLabel, secondPlaceholder = _this$props3.secondPlaceholder, value = _this$props3.value;
          var _concat = [].concat(value), _concat2 = _slicedToArray(_concat, 1), valueFrom = _concat2[0];
          var ariaLabelProps = {
            amPmAriaLabel,
            hourAriaLabel,
            minuteAriaLabel,
            nativeInputAriaLabel,
            secondAriaLabel
          };
          var placeholderProps = {
            hourPlaceholder,
            minutePlaceholder,
            secondPlaceholder
          };
          return _react["default"].createElement("div", {
            className: "".concat(baseClassName, "__wrapper")
          }, _react["default"].createElement(_TimeInput["default"], _extends({}, ariaLabelProps, placeholderProps, {
            autoFocus,
            className: "".concat(baseClassName, "__inputGroup"),
            disabled,
            format,
            isClockOpen: isOpen,
            locale,
            maxDetail,
            maxTime,
            minTime,
            name,
            onChange: this.onChange,
            placeholder: this.placeholder,
            required,
            value: valueFrom
          })), clearIcon !== null && _react["default"].createElement("button", {
            "aria-label": clearAriaLabel,
            className: "".concat(baseClassName, "__clear-button ").concat(baseClassName, "__button"),
            disabled,
            onClick: this.clear,
            onFocus: this.stopPropagation,
            type: "button"
          }, clearIcon), clockIcon !== null && !disableClock && _react["default"].createElement("button", {
            "aria-label": clockAriaLabel,
            className: "".concat(baseClassName, "__clock-button ").concat(baseClassName, "__button"),
            disabled,
            onBlur: this.resetValue,
            onClick: this.toggleClock,
            onFocus: this.stopPropagation,
            type: "button"
          }, clockIcon));
        }
      }, {
        key: "renderClock",
        value: function renderClock() {
          var disableClock = this.props.disableClock;
          var isOpen = this.state.isOpen;
          if (isOpen === null || disableClock) {
            return null;
          }
          var _this$props4 = this.props, clockClassName = _this$props4.clockClassName, timePickerClassName = _this$props4.className, maxDetail = _this$props4.maxDetail, onChange = _this$props4.onChange, portalContainer = _this$props4.portalContainer, value = _this$props4.value, clockProps = _objectWithoutProperties(_this$props4, _excluded);
          var className = "".concat(baseClassName, "__clock");
          var classNames = (0, _clsx["default"])(className, "".concat(className, "--").concat(isOpen ? "open" : "closed"));
          var _concat3 = [].concat(value), _concat4 = _slicedToArray(_concat3, 1), valueFrom = _concat4[0];
          var maxDetailIndex = allViews.indexOf(maxDetail);
          var clock = _react["default"].createElement(_reactClock["default"], _extends({
            className: clockClassName,
            renderMinuteHand: maxDetailIndex > 0,
            renderSecondHand: maxDetailIndex > 1,
            value: valueFrom
          }, clockProps));
          return portalContainer ? (0, _reactDom.createPortal)(_react["default"].createElement("div", {
            ref: this.clockWrapper,
            className: classNames
          }, clock), portalContainer) : _react["default"].createElement(_reactFit["default"], null, _react["default"].createElement("div", {
            ref: function ref(_ref) {
              if (_ref && !isOpen) {
                _ref.removeAttribute("style");
              }
            },
            className: classNames
          }, clock));
        }
      }, {
        key: "render",
        value: function render() {
          var eventProps = this.eventProps;
          var _this$props5 = this.props, className = _this$props5.className, dataTestid = _this$props5["data-testid"], disabled = _this$props5.disabled;
          var isOpen = this.state.isOpen;
          var onChange = eventProps.onChange, eventPropsWithoutOnChange = _objectWithoutProperties(eventProps, _excluded2);
          return _react["default"].createElement("div", _extends({
            className: (0, _clsx["default"])(baseClassName, "".concat(baseClassName, "--").concat(isOpen ? "open" : "closed"), "".concat(baseClassName, "--").concat(disabled ? "disabled" : "enabled"), className),
            "data-testid": dataTestid
          }, eventPropsWithoutOnChange, {
            onFocus: this.onFocus,
            ref: this.wrapper
          }), this.renderInputs(), this.renderClock());
        }
      }], [{
        key: "getDerivedStateFromProps",
        value: function getDerivedStateFromProps(nextProps, prevState) {
          if (nextProps.isOpen !== prevState.isOpenProps) {
            return {
              isOpen: nextProps.isOpen,
              isOpenProps: nextProps.isOpen
            };
          }
          return null;
        }
      }]);
      return TimePicker2;
    }(_react.PureComponent);
    exports["default"] = TimePicker;
    var iconProps = {
      xmlns: "http://www.w3.org/2000/svg",
      width: 19,
      height: 19,
      viewBox: "0 0 19 19",
      stroke: "black",
      strokeWidth: 2
    };
    var ClockIcon = _react["default"].createElement("svg", _extends({}, iconProps, {
      className: "".concat(baseClassName, "__clock-button__icon ").concat(baseClassName, "__button__icon"),
      fill: "none"
    }), _react["default"].createElement("circle", {
      cx: "9.5",
      cy: "9.5",
      r: "7.5"
    }), _react["default"].createElement("path", {
      d: "M9.5 4.5 v5 h4"
    }));
    var ClearIcon = _react["default"].createElement("svg", _extends({}, iconProps, {
      className: "".concat(baseClassName, "__clear-button__icon ").concat(baseClassName, "__button__icon")
    }), _react["default"].createElement("line", {
      x1: "4",
      x2: "15",
      y1: "4",
      y2: "15"
    }), _react["default"].createElement("line", {
      x1: "15",
      x2: "4",
      y1: "4",
      y2: "15"
    }));
    TimePicker.defaultProps = {
      clearIcon: ClearIcon,
      clockIcon: ClockIcon,
      closeClock: true,
      isOpen: null,
      maxDetail: "minute",
      openClockOnFocus: true
    };
    var isValue = _propTypes["default"].oneOfType([_propTypes2.isTime, _propTypes["default"].instanceOf(Date)]);
    TimePicker.propTypes = {
      amPmAriaLabel: _propTypes["default"].string,
      autoFocus: _propTypes["default"].bool,
      className: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].arrayOf(_propTypes["default"].string)]),
      clearAriaLabel: _propTypes["default"].string,
      clearIcon: _propTypes["default"].node,
      clockAriaLabel: _propTypes["default"].string,
      clockClassName: _propTypes["default"].oneOfType([_propTypes["default"].string, _propTypes["default"].arrayOf(_propTypes["default"].string)]),
      clockIcon: _propTypes["default"].node,
      closeClock: _propTypes["default"].bool,
      "data-testid": _propTypes["default"].string,
      disableClock: _propTypes["default"].bool,
      disabled: _propTypes["default"].bool,
      format: _propTypes["default"].string,
      hourAriaLabel: _propTypes["default"].string,
      hourPlaceholder: _propTypes["default"].string,
      isOpen: _propTypes["default"].bool,
      locale: _propTypes["default"].string,
      maxDetail: _propTypes["default"].oneOf(allViews),
      maxTime: _propTypes2.isTime,
      minTime: _propTypes2.isTime,
      minuteAriaLabel: _propTypes["default"].string,
      minutePlaceholder: _propTypes["default"].string,
      name: _propTypes["default"].string,
      nativeInputAriaLabel: _propTypes["default"].string,
      onChange: _propTypes["default"].func,
      onClockClose: _propTypes["default"].func,
      onClockOpen: _propTypes["default"].func,
      onFocus: _propTypes["default"].func,
      openClockOnFocus: _propTypes["default"].bool,
      portalContainer: _propTypes["default"].object,
      required: _propTypes["default"].bool,
      secondAriaLabel: _propTypes["default"].string,
      secondPlaceholder: _propTypes["default"].string,
      value: _propTypes["default"].oneOfType([isValue, _propTypes["default"].arrayOf(isValue)])
    };
  }
});

// vite:dep-pre-bundle:external-conversion:E:/herd-sites/scat/node_modules/react-time-picker/dist/TimePicker.css
var TimePicker_exports = {};
__export(TimePicker_exports, {
  default: () => default3
});
import { default as default3 } from "E:/herd-sites/scat/node_modules/react-time-picker/dist/TimePicker.css";
import * as TimePicker_star from "E:/herd-sites/scat/node_modules/react-time-picker/dist/TimePicker.css";
var init_TimePicker = __esm({
  "vite:dep-pre-bundle:external-conversion:E:/herd-sites/scat/node_modules/react-time-picker/dist/TimePicker.css"() {
    __reExport(TimePicker_exports, TimePicker_star);
  }
});

// node_modules/react-time-picker/dist/entry.js
var require_entry = __commonJS({
  "node_modules/react-time-picker/dist/entry.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports["default"] = void 0;
    init_Clock();
    var _TimePicker = _interopRequireDefault(require_TimePicker());
    init_TimePicker();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { "default": obj };
    }
    var _default = _TimePicker["default"];
    exports["default"] = _default;
  }
});
export default require_entry();
//# sourceMappingURL=react-time-picker.js.map
